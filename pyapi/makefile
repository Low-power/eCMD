# $Header$
# Makefile for the ecmd Python Module

# Base info and default build rules
SUBDIR     := pyapi/
include ../makefile.rules

VPATH        := ${VPATH}:../capi:${SRCDIR}
INCLUDES     := ecmdClientCapi.H ecmdClientPyapi.H ecmdDataBufferBase.H ecmdDataBuffer.H ecmdReturnCodes.H ecmdStructs.H
SOURCE       := ecmdClientCapi.C ecmdClientPyapi.C
SWIG_INPUT   := ecmdClientPyapi.i ecmdCommon.i
# This source is generated by swig below
SWIG_SOURCE  := ecmdClientPyapiSwig.C
CFLAGS       := ${CFLAGS} -I../capi -I../dll -I../ecmd -I${SRCDIR}
SWIGFLAGS    := ${SWIGFLAGS} -c++ -python -I../capi -I../dll -I${SRCDIR} -DECMD_PYAPI

# Ok, tack on all the extension stuff
VPATH        := ${VPATH}$(foreach ext, ${EXTENSIONS},:../ext/${ext}/capi:../ext/${ext}/pyapi)
VPATH        := $(subst ${space},,${VPATH})

INCLUDES     := ${INCLUDES} $(foreach ext, ${EXTENSIONS}, ${ext}ClientCapi.H ${ext}ClientPyapi.H)
CFLAGS       := ${CFLAGS} $(foreach ext, ${EXTENSIONS},-I../ext/${ext}/capi -I../ext/${ext}/pyapi -DECMD_$(shell echo ${ext} | tr "a-zA-Z" "A-Za-z")_EXTENSION_SUPPORT)
SWIGFLAGS    := ${SWIGFLAGS} $(foreach ext, ${EXTENSIONS},-I../ext/${ext}/capi -I../ext/${ext}/pyapi -DECMD_$(shell echo ${ext} | tr "a-zA-Z" "A-Za-z")_EXTENSION_SUPPORT)
SOURCE       := ${SOURCE} $(foreach ext, ${EXTENSIONS}, ${ext}ClientCapi.C ${ext}ClientPyapi.C)
# Remove the fapiClientCapi.C from the build, only will use fapiClientPyapi.C which has the init extension
SOURCE       := $(subst fapiClientCapi.C,,${SOURCE})

# *****************************************************************************
# The Common Setup stuff
# *****************************************************************************
PY_TARGET := ecmd.py
SO_TARGET := _ecmd.so
PYTHON_NAME ?= python2
LINK_OBJS := ${LINK_OBJS} ${OBJROOT}/capi/${OBJDIR}/ecmdClientCapi.a
# remove fapi here and add initFapiExtention only
ifeq (fapi,$(filter ${EXTENSIONS},fapi))
  LINK_OBJS  := ${LINK_OBJS} ${OBJROOT}/ext/fapi/capi/${OBJDIR}/fapiClientCapiInit.o
endif
LINK_EXTENSIONS := $(subst fapi,,${EXTENSIONS})
LINK_OBJS  := ${LINK_OBJS} $(foreach ext, ${LINK_EXTENSIONS}, ${OBJROOT}/ext/${ext}/capi/${OBJDIR}/${ext}ClientCapi.a)
VPATH      := ${VPATH}:${OBJPATH}
ifeq (${TARGET_ARCH},x86)
  SWIG     ?= /gsa/${GSACELL}/projects/e/ecmd/utils/swig-1.3.39/x86/bin/swig
else ifeq (${TARGET_ARCH},x86_64)
  SWIG     ?= /gsa/${GSACELL}/projects/e/ecmd/utils/swig-3.0.2/x86_64/bin/swig
else ifeq (${TARGET_ARCH},aix)
  SWIG     ?= /gsa/${GSACELL}/projects/e/ecmd/utils/swig-1.3.39/aix/bin/swig
else
  SWIG     ?= /usr/bin/swig
endif
SWIGFLAGS := ${SWIGFLAGS} -I../pyapi
ECMDPYTHONBIN ?= /usr/bin/python

# *****************************************************************************
# The x86 Linux Setup stuff
# *****************************************************************************
ifeq (${TARGET_OS},x86)
  SLDFLAGS  := ${SLDFLAGS}
  LDLIBS    := ${LDLIBS} -L${OBJROOT}/capi/${OBJDIR} -lecmd
  ifeq (${TARGET_ARCH},x86)
    PYINC ?= -I/usr/include/python2.6
  else
    PYINC ?= -I/usr/include/python2.6
  endif
endif

# *****************************************************************************
# The ppc Linux Setup stuff
# *****************************************************************************
ifeq (${TARGET_OS},ppc)
  SLDFLAGS  := ${SLDFLAGS}
  LDLIBS    := ${LDLIBS} -L${OBJROOT}/capi/${OBJDIR} -lecmd
  ifeq (${TARGET_ARCH},ppc)
    PYINC ?= -I/usr/include/python2.6
  else
    PYINC ?= -I/usr/include/python2.6
  endif
endif

# *****************************************************************************
# The Aix Setup stuff
# *****************************************************************************
# NEEDS UPDATE
ifeq (${TARGET_OS},aix)
  SLDFLAGS  := ${SLDFLAGS} -lpthreads -bI:${CTEPATH}/tools/perl/5.8.1/lib/5.8.1/rs_aix53/CORE/perl.exp -L ${OBJROOT}/capi/${OBJDIR} -l ecmd
  PERLINC   ?= -I${CTEPATH}/tools/perl/5.8.1/lib/5.8.1/rs_aix53/CORE
  DEFINES   := ${DEFINES} -DHAS_BOOL=1
endif

# This handles the fact that the same make file is used for both python2 and python3 apis
VERINSTALL  ?= pyapi_install

# *****************************************************************************
# The Main Targets
# *****************************************************************************
all:
	@echo "Calling swig ..."
	@${MAKE} swig ${GMAKEFLAGS} --no-print-directory
	@echo "Compiling source ..."
	@${MAKE} buildsource ${GMAKEFLAGS} --no-print-directory
	@echo "Testing build ..."
	@${MAKE} test ${GMAKEFLAGS} --no-print-directory
	@echo " "

swig: ${SWIG_SOURCE}

buildsource: ${SO_TARGET}

clean: objclean

objclean:
	rm -rf ${OBJPATH}
	rm -rf ${SRCPATH}
	rm -f *.o

install: ${VERINSTALL}

pyapi_install:
	@echo "Creating ${TARGET_ARCH}/${PYTHON_NAME} dir ..."
	@mkdir -p ${INSTALL_PATH}/${TARGET_ARCH}/${PYTHON_NAME}
	@echo " "

	@echo "Installing eCMD Python API ${INSTALL_PATH}/${TARGET_ARCH}/${PYTHON_NAME}.."
	cp ${OBJPATH}${PY_TARGET} ${INSTALL_PATH}/${TARGET_ARCH}/${PYTHON_NAME}/.
	cp ${OBJPATH}${SO_TARGET} ${INSTALL_PATH}/${TARGET_ARCH}/${PYTHON_NAME}/.

test: ${SO_TARGET}
        ifeq (${TARGET_OS},aix)
	@slibclean
        endif
	@echo "***** If you see python load errors this build of the python module is invalid ****"
	@ECMD_DLL_FILE=${OBJROOT}/dllStub/${OBJDIR}/stub.dll PYTHONPATH=${OBJPATH} LD_LIBRARY_PATH=${OBJROOT}/capi/${OBJDIR} ${ECMDPYTHONBIN} ../pyapi/testBuild.py


# *****************************************************************************
# Object Build Targets
# *****************************************************************************
SOURCE_OBJS := $(basename ${SOURCE})
SOURCE_OBJS := $(addprefix ${OBJPATH}, ${SOURCE_OBJS})
SOURCE_OBJS := $(addsuffix .o, ${SOURCE_OBJS})
SWIG_OBJS   := $(basename ${SWIG_SOURCE})
SWIG_OBJS   := $(addprefix ${OBJPATH}, ${SWIG_OBJS})
SWIG_OBJS   := $(addsuffix .o, ${SWIG_OBJS})

# *****************************************************************************
# Create directories from order only dependencies
# *****************************************************************************
${SRCPATH} ${OBJPATH}:
	@mkdir -p $@

# *****************************************************************************
# Compile code for the common C++ objects if their respective
# code has been changed.  Or, compile everything if a header
# file has changed.
# *****************************************************************************
${SOURCE_OBJS}: ${OBJPATH}%.o : %.C ${INCLUDES} | ${OBJPATH}
	${CC_R} -c ${CFLAGS} ${PYINC} $< -o $@ ${DEFINES}

${SWIG_SOURCE}: ${INCLUDES} ${SWIG_INPUT} | ${SRCPATH} ${OBJPATH}
	${SWIG} ${SWIGFLAGS} ${DEFINES} -o ${SRCDIR}/${SWIG_SOURCE} -outdir ${OBJPATH} ../pyapi/ecmdClientPyapi.i

${SWIG_OBJS}: ${OBJPATH}%.o : %.C ${SWIG_SOURCE} | ${OBJPATH}
	${CC_R} -c ${CFLAGS} ${PYINC} $< -o $@ ${DEFINES}

# *****************************************************************************
# Create the Python Shared Library
# *****************************************************************************
${SO_TARGET}: ${SOURCE_OBJS} ${SWIG_OBJS} ${LINK_OBJS}
	${LD_R} ${SLDFLAGS} $^ -o ${OBJPATH}${SO_TARGET} ${LDLIBS}

# *****************************************************************************
# Debug rule for any makefile testing 
# *****************************************************************************
debug:
	@echo ${ECMD_ROOT}
	@echo ${SUBDIR}
	@echo ${SWIG_SOURCE}
	@echo ${VPATH}
	@echo ${INCLUDES}
