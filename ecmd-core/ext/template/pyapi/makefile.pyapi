# Makefile for the ecmd Extensions

# *****************************************************************************
# Define base info and include any global variables
# *****************************************************************************
EXTENSION_NAME_u := $(shell echo ${EXTENSION_NAME} | tr 'a-z' 'A-Z')
EXTENSION_NAME_u1 := $(shell perl -e 'printf(ucfirst(${EXTENSION_NAME}))')

### Generated source
ifeq ($(strip ${DISABLE_AUTOGEN}),)
  # These are the files that will be autogenerated from the template
  TEMPLATE_SOURCE := ${EXTENSION_NAME}ClientPyapi.C
endif

VPATH := ${VPATH}:${OBJPATH}:${EXT_TEMPLATE_PATH}/pyapi

# *****************************************************************************
# The Main Targets
# *****************************************************************************
# The run-all rule is defined in makefile.rules
all:
	${run-all}

generate: ${TEMPLATE_SOURCE}

build:
  # Do nothing

test:
  # Do nothing

install:
  # Do nothing

doxygen-pyapi:
        # grep out *Capi.H to eliminate doxygen error that happens from having mismatched file names in comments
	@cat ${EXT_${EXTENSION_NAME}_PATH}/capi/${EXTENSION_NAME}ClientCapi.H ${EXTENSION_NAME}ClientPyapi.H | grep -v ${EXTENSION_NAME}ClientCapi.H > ${DOXYGEN_PYAPI_PATH}/${EXTENSION_NAME}ClientPyapi.H


# *****************************************************************************
# Template source files
# *****************************************************************************
ifeq ($(strip ${DISABLE_AUTOGEN}),)
  ${TEMPLATE_SOURCE}: ${EXTENSION_NAME}% : template%
	@echo "Generating $@"
	@sed "s/template/${EXTENSION_NAME}/g" $< | sed "s/TEMPLATE/${EXTENSION_NAME_u}/g" | sed "s/Template/${EXTENSION_NAME_u1}/g" > ${SRCPATH}/$@
endif

# *****************************************************************************
# Include any global default rules
# *****************************************************************************
include ${ECMD_ROOT}/makefile.rules
