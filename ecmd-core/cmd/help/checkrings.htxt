
Syntax: checkrings <Chip[.ChipUnit]> <RingSelect> [-v] [-nosr] [-bsread] [-bswrite] [-flush0] [-flush1] [-pattern0]
                                                  [-pattern1] [-noignoremask] [-set_pulse_cond] [-set_pulse_cond_all]
                                                  [-mcastwrite <group>] [-mcastread <group>]
        [-quiet] [-quieterror] [-exist] [-coe] [-a#] [-k#] [-n#] [-s#] [-p#] [-c#]

        ECMD:           Core Common Function

        Function:       checks for stuck bits and verifies scanring length by scanning
                        ones and zeros to scan chain.

        Parameters:
        --------------------------------------------------------------------------------
        Chip                      Specifies the chip to operate on.
        ChipUnit [opt]            If you are using ChipUnits, you also specify your ChipUnit
                                  w/o  ChipUnit: pu
                                  with ChipUnit: pu.mc

        RingSelect                Specifies chip ring to operate on.  Use "all" for all rings.
                                  For a list of available rings, use the query command.

                                  Ex:  ecmdquery rings memctrl
                                       ecmdquery rings pu                     
	
        -v        [opt]           Display detailed ring failure data
        
        -nosr     [opt]           Do not perform the save/restore of the ring

	-bsread   [opt]           Do a broadside read of the ring when testing patterns. sim only.

	-bswrite  [opt]           Do a broadside write of the ring when testing patterns. sim only.

                  NOTE:           If none of the below options are specified, all 4 are on by default
	
        -flush0   [opt]           Perform a test with all 0's

        -flush1   [opt]           Perform a test with all 1's

        -pattern0 [opt]           Perform a test with a 0's heavy pattern of 1001010

        -pattern1 [opt]           Perform a test with a 1's heavy pattern of 0110101

        -pattern  <32-bit hex value> Perform a test with specified pattern

        -noignoremask [opt]       Bypass application of ignore mask to read data for rings that use ignore masks.

        -set_pulse_cond [opt]     Uses the ECMD_RING_MODE_SET_PULSE_SL and ECMD_RING_MODE_SET_PULSE_NSL flags for scan conditioning.

        -set_pulse_cond_all[opt]  Uses the ECMD_RING_MODE_SET_PULSE_ALL flag for scan conditioning.

        -mcastread <group> [opt]  Perform a muliticast read of the ring to the specified group.  The read is only done on last configured 
                                  chipUnit within the target looper. 

        -mcastwrite <group> [opt] Perform a multicast write of the ring to the specified group.  The write is only done on the first configured
                                  chipUnit within the target looper.  

                                  * For -mcastread and -mcastwrite modes, it is assumed that multicast groups have already been set up, 
                                    and the groups include all configured chipUnit targets.
                                  * These modes are only valid for chipUnit scoped rings that have multicast groups configured.  
                                  * The <group> can be just the group number (i.e. 6), or it can also include an encoded core select value 
                                    in the second byte passed in. (i.e. F06 to select all 4 cores in group 6) 
                                  * You must also specify one of the 5 -flush/-pattern flags to run.  Running the default of all patterns is 
                                    not supported in multicast modes.  
                                  * It is recommended to use the -call flag when using the multicast checkrings modes.
 
                                  Run 'ecmdquery options' for a list of the global command line
                                  options and their definitions
        --------------------------------------------------------------------------------

        Example:        checkrings pu all -p0,1 -c0
                        checkrings memctrl int -pall
                        checkrings pu all -v -pattern feedb0b0
                        checkrings pu.mc all -mcastwrite 2 -bsread -pattern1 -call
