# *****************************************************************************
# The basic rules that apply to a default eCMD build
# *****************************************************************************

ifeq (${MAKEFILE_RULES},)

MAKEFILE_RULES   := y

# The default extensions we will build as part of eCMD if not otherwise specified
ifeq ($(strip $(EXTENSIONS)),)
  EXTENSIONS := cro cip gip eip scand zse bml mbo cmd
  export EXTENSIONS
endif


# Figure out the OS
OS           := $(shell uname)
# We need to do extra for Linux
ifeq (${OS},Linux)
  ifneq ($(strip $(shell uname -a |grep ppc)),)
    OS := Linux_ppc
  else
    OS := Linux_x86
  endif
else
  # Figure out site
  SITE         := $(shell fs wscell | cut -d\' -f2)
endif


######## Default things we need setup for every compile ########


# *****************************************************************************
# The x86 Linux Setup stuff
# *****************************************************************************
ifeq (${OS},Linux_x86)
  SUBDIR   := obj_x86/
  CC       := ${CTEPATH}/tools/ecmd/utils/gcc-3.2.3-gnu/bin/g++
  CFLAGS   := -g -I.
  LD       := ${CC}
  GPATH    := ${SUBDIR}
endif

# *****************************************************************************
# The ppc Linux Setup stuff
# *****************************************************************************
ifeq (${OS},Linux_ppc)
  SUBDIR   := obj_ppc/
  CC       := g++
  CFLAGS   := -g -I.
  LD       := ${CC}
  GPATH   := ${SUBDIR}
endif

# *****************************************************************************
# The Aix Setup stuff
# *****************************************************************************
ifeq (${OS},AIX)
  SUBDIR  := obj_aix/
  # Pick the compiler, for Rochester,Austin,Pok you can use a local compiler which is 6.0.0.8, all other sites must run remote from rochester
  CC      := /afs/rchland.ibm.com/rs_aix53/lpp/vacpp.6008/usr/vacpp/bin/xlC.6008
  ifeq (${SITE},apd.pok.ibm.com)
    CC      := xlC
  endif
  ifeq (${SITE},awd.austin.ibm.com)
    CC      := xlC
  endif
  CFLAGS   := -g -I.
  LD       := ${CC}
endif


# Include the makefile.confg if the config script was run, this will override anything above
-include ${ECMD_ROOT}/makefile.config

# Setup the install path if the user didn't specify one in the config
ifeq ($(strip $(INSTALL_PATH)),)
  INSTALL_PATH := $(shell pwd)
  INSTALL_PATH := ${INSTALL_PATH}/install
  export INSTALL_PATH
endif

# Figure out how many gmake threads to run
ifeq (${OS},AIX)
  #GMAKEFLAGS := ${GMAKEFLAGS} -j$(shell /etc/lsdev -Cc processor | grep -c Processor)
  GMAKEFLAGS := ${GMAKEFLAGS} -j$(shell expr `/etc/lsdev -Cc processor | grep -c Processor` \* 2)
else
  #GMAKEFLAGS := ${GMAKEFLAGS} -j$(shell cat /proc/cpuinfo | grep -c processor)
  GMAKEFLAGS := ${GMAKEFLAGS} -j$(shell expr `cat /proc/cpuinfo | grep -c processor` \* 2)
endif

endif
