# *****************************************************************************
# The basic rules that apply to a default eCMD build
# *****************************************************************************

ifeq (${MAKEFILE_RULES},)

MAKEFILE_RULES := y

# The directory creation rule
# The if conditions make it so it only prints when it's creating missing directories
# This was done because the dir rule is called quite often and would look empty otherwise
dir:
	@echo "==== Creating Dirs ===="
	@if [ ! -d ${OBJPATH} ]; then mkdir -p ${OBJPATH}; echo mkdir -p ${OBJPATH}; fi
	@if [ ! -d ${SRCPATH} ]; then mkdir -p ${SRCPATH}; echo mkdir -p ${SRCPATH}; fi
	@if [ ! -d ${OUTBIN} ]; then mkdir -p ${OUTBIN}; echo mkdir -p ${OUTBIN}; fi
	@if [ ! -d ${OUTLIB} ]; then mkdir -p ${OUTLIB}; echo mkdir -p ${OUTLIB}; fi
	@if [ ! -d ${OUTPERL} ]; then mkdir -p ${OUTPERL}; echo mkdir -p ${OUTPERL}; fi
	@if [ ! -d ${OUTPY} ]; then mkdir -p ${OUTPY}; echo mkdir -p ${OUTPY}; fi
	@if [ ! -d ${OUTPY3} ]; then mkdir -p ${OUTPY3}; echo mkdir -p ${OUTPY3}; fi
	@if [ ! -d ${OUTPYECMD} ]; then mkdir -p ${OUTPYECMD}; echo mkdir -p ${OUTPYECMD}; fi

# Runs the objclean rule in addition to removing generated source and binaries
clean: objclean
	rm -rf ${SRCPATH}
	rm -rf ${OUTPATH}

# Remove the obj_* dir for the system type you are building on
objclean:
	@echo "==== Removing Dirs ===="
	rm -rf ${OBJPATH}

# Only do the build test if enabled
ifeq (${TEST_BUILD},yes)
  define run-all-test
	@echo ""
	@echo "==== Testing Build ===="
	${VERBOSE}${MAKE} test ${MAKEFLAGS} --no-print-directory
  endef
else
  define run-all-test
  endef
endif

define run-all
	${VERBOSE}${MAKE} dir ${MAKEFLAGS} --no-print-directory
	@echo ""
	@echo "==== Generating Source ===="
	${VERBOSE}${MAKE} generate ${MAKEFLAGS} --no-print-directory
	@echo ""
	@echo "==== Building Source ===="
	${VERBOSE}${MAKE} build ${MAKEFLAGS} --no-print-directory
	${run-all-test}
endef


# Allows you to print any variable by doing this:
# make print-BUILD_TARGETS
print-%:
	@echo $*=$($*)

endif

