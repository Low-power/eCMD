# Makefile for the ecmd Perl Module
# Written by Chris Engel

# $Header$

ECMD_ROOT    := ${PWD}/../
# The default build rules
include ${ECMD_ROOT}/makefile.rules

VPATH        := ../capi
INCLUDES     := ecmdClientCapi.H  ecmdDataBuffer.H  ecmdReturnCodes.H ecmdStructs.H ecmdClientPerlapi.H ecmdBit64.H
SOURCE       := ecmdClientPerlapi.C ecmdClientPerlapiFunc.C ecmdBit64.C
# This is the source generated by makepm.pl
GENERATED_SOURCE   := ecmdClientPerlapiFunc.C
GENERATED_INCLUDES := ecmdClientPerlapiFunc.H ecmdClientPerlapiIterators.H
# This source is generated by swig below
SWIG_SOURCE  := ecmdClientPerlapiSwig.C
DEFINES      := 
CFLAGS       := ${CFLAGS} -I../capi -I../dll
SWIGFLAGS    := ${SWIGFLAGS} -c++ -perl5 -exportall -const -I../capi -I../dll -DECMD_PERLAPI

# Ok, tack on all the extension stuff
VPATH        := ${VPATH}$(foreach ext, ${EXTENSIONS},:../ext/${ext}/capi:../ext/${ext}/perlapi)
#These are needed to define a space char for substitutions later on
empty :=
space := ${empty} ${empty}
VPATH := $(subst ${space},,${VPATH})

INCLUDES     := ${INCLUDES} $(foreach ext, ${EXTENSIONS}, ${ext}ClientPerlapi.H ${ext}ClientCapi.H )
CFLAGS       := ${CFLAGS} $(foreach ext, ${EXTENSIONS}, -I../ext/${ext}/capi -I../ext/${ext}/perlapi -DECMD_$(shell echo ${ext} | tr "a-zA-Z" "A-Za-z")_EXTENSION_SUPPORT)
SWIGFLAGS    := ${SWIGFLAGS} $(foreach ext, ${EXTENSIONS}, -I../ext/${ext}/perlapi -I../ext/${ext}/capi -DECMD_$(shell echo ${ext} | tr "a-zA-Z" "A-Za-z")_EXTENSION_SUPPORT)
SOURCE       := ${SOURCE} $(foreach ext, ${EXTENSIONS}, ${ext}ClientPerlapi.C ${ext}ClientPerlapiFunc.C)

# The two build target
PM_TARGET    = ecmd.pm
SO_TARGET    = ecmd.so

# *****************************************************************************
# The x86 Linux Setup stuff
# *****************************************************************************
ifeq (${OS},Linux_x86)
  TARGET    := ecmd
  SLDFLAGS  := ${SLDFLAGS} -L../capi/${SUBDIR} -lecmd_x86
  LINK_OBJS := ${LINK_OBJS} ../capi/${SUBDIR}/ecmdClientCapi_x86.a
  LINK_OBJS := ${LINK_OBJS} $(foreach ext, ${EXTENSIONS}, ../ext/${ext}/capi/${SUBDIR}/${ext}ClientCapi_x86.a)
  CFLAGS    := ${CFLAGS} -ftemplate-depth-30 -Wall
  ifeq ($(strip ${PERLINC}),)
    PERLINC   := -I${CTEPATH}/tools/perl/5.8.1/lib/5.8.1/i386_linux24/CORE
  endif
  ifeq ($(strip ${SWIG}),)
    SWIG      := ${CTEPATH}/tools/ecmd/utils/swig-1.3.31/bin/swig
  endif
  ifeq ($(strip ${SWIGDIR}),)
    SWIGFLAGS := ${SWIGFLAGS} -I${CTEPATH}/tools/ecmd/utils/swig-1.3.31/lib -I${CTEPATH}/tools/ecmd/utils/swig-1.3.31/lib/perl5
  else
    SWIGFLAGS := ${SWIGFLAGS} -I${SWIGDIR}/perl5 -I${SWIGDIR}
  endif
endif

# *****************************************************************************
# The ppc Linux Setup stuff
# *****************************************************************************
ifeq (${OS},Linux_ppc)
  TARGET    := ecmd
  SLDFLAGS  := ${SLDFLAGS} -L../capi/${SUBDIR} -lecmd_ppc
  LINK_OBJS := ${LINK_OBJS} ../capi/${SUBDIR}/ecmdClientCapi_ppc.a
  LINK_OBJS := ${LINK_OBJS} $(foreach ext, ${EXTENSIONS}, ../ext/${ext}/capi/${SUBDIR}/${ext}ClientCapi_ppc.a)
  CFLAGS    := ${CFLAGS} -ftemplate-depth-30 -Wall
  ifeq ($(strip ${PERLINC}),)
    PERLINC   := -I${CTEPATH}/tools/perl/5.8.1/lib/5.8.1/i386_linux24/CORE
  endif
  ifeq ($(strip ${SWIG}),)
    SWIG      := ${CTEPATH}/tools/ecmd/utils/swig-1.3.31/bin/swig
  endif
  ifeq ($(strip ${SWIGDIR}),)
    SWIGFLAGS := ${SWIGFLAGS} -I${CTEPATH}/tools/ecmd/utils/swig-1.3.31/lib -I${CTEPATH}/tools/ecmd/utils/swig-1.3.31/lib/perl5
  else
    SWIGFLAGS := ${SWIGFLAGS} -I${SWIGDIR}/perl5 -I${SWIGDIR}
  endif
endif

# *****************************************************************************
# The Aix Setup stuff
# *****************************************************************************
ifeq (${OS},AIX)
  TARGET    := ecmd
  SLDFLAGS  := ${SLDFLAGS} -lpthreads -bI:${CTEPATH}/tools/perl/5.8.1/lib/5.8.1/rs_aix53/CORE/perl.exp -L ../capi/${SUBDIR} -l ecmd_aix
  LINK_OBJS := ${LINK_OBJS} ../capi/${SUBDIR}/ecmdClientCapi_aix.a
  LINK_OBJS := ${LINK_OBJS} $(foreach ext, ${EXTENSIONS}, ../ext/${ext}/capi/${SUBDIR}/${ext}ClientCapi_aix.a)
  CFLAGS    := ${CFLAGS}  -qstaticinline -qnoinline -+
  ifeq ($(strip ${PERLINC}),)
    PERLINC   := -I${CTEPATH}/tools/perl/5.8.1/lib/5.8.1/rs_aix53/CORE
  endif
  ifeq ($(strip ${SWIG}),)
    SWIG      := ${CTEPATH}/tools/ecmd/utils/swig-1.3.31/bin/swig
  endif
  ifeq ($(strip ${SWIGDIR}),)
    SWIGFLAGS := ${SWIGFLAGS} -I${CTEPATH}/tools/ecmd/utils/swig-1.3.31/lib -I${CTEPATH}/tools/ecmd/utils/swig-1.3.31/lib/perl5
  else
    SWIGFLAGS := ${SWIGFLAGS} -I${SWIGDIR}/perl5 -I${SWIGDIR}
  endif
  DEFINES   := ${DEFINES} -DHAS_BOOL=1
endif

VPATH     := ${VPATH}:${SUBDIR}

# *****************************************************************************
# The Main Targets
# *****************************************************************************
all: dir ${SO_TARGET} ${PM_TARGET} test

clean: objclean
	rm -f ${SWIG_SOURCE}
	rm -f ${GENERATED_SOURCE}
	rm -f ${GENERATED_INCLUDES}

objclean:
	rm -rf ${SUBDIR}
	rm -f *.o

install:
	@echo "Installing eCMD PerlApi to ${INSTALL_PATH}/perlapi/`uname`/ ..."
	@mkdir -p ${INSTALL_PATH}/perlapi/`uname`/
	cp ${SUBDIR}${PM_TARGET} ${INSTALL_PATH}/perlapi/`uname`/.
	cp ${SUBDIR}${SO_TARGET} ${INSTALL_PATH}/perlapi/`uname`/.

dir:
	@mkdir -p ${SUBDIR}

test: ${SO_TARGET} ${PM_TARGET}
        ifeq (${OS},AIX)
	@slibclean
        endif
	@echo "***** If you see perl load errors this build of the perl module is invalid, ignore ECMD_DLL_FILE errors ****"
	@./testBuild.pl

# *****************************************************************************
# Object Build Targets
# *****************************************************************************
SOURCE_OBJS  = $(basename $(SOURCE))
SOURCE_OBJS := $(addprefix ${SUBDIR}, $(SOURCE_OBJS))
SOURCE_OBJS := $(addsuffix .o, $(SOURCE_OBJS))
SWIG_OBJS    = $(basename $(SWIG_SOURCE))
SWIG_OBJS   := $(addprefix ${SUBDIR}, $(SWIG_OBJS))
SWIG_OBJS   := $(addsuffix .o, $(SWIG_OBJS))

# *****************************************************************************
# Compile code for the common C++ objects if their respective
# code has been changed.  Or, compile everything if a header
# file has changed.
# *****************************************************************************
$(SOURCE_OBJS): ${SUBDIR}%.o : %.C ${INCLUDES} ${GENERATED_INCLUDES}
	$(CC_R) -c $(CFLAGS) ${PERLINC} $< -o $@ $(DEFINES)

${PM_TARGET} ${SWIG_SOURCE}: ${INCLUDES} ${GENERATED_INCLUDES} ecmdClientPerlapi.i ecmdString.i ecmdVector.i ecmdList.i ecmdCommon.i ecmdClientPerlapi.pl 
	${SWIG} ${SWIGFLAGS} -o ${SWIG_SOURCE} -outdir ${SUBDIR} ecmdClientPerlapi.i

${SWIG_OBJS}: ${SUBDIR}%.o : %.C ${SWIG_SOURCE}
	${CC_R} -c ${CFLAGS} ${PERLINC} $< -o $@ ${DEFINES}

# *****************************************************************************
# Create the Perl Shared Library
# *****************************************************************************
${SO_TARGET}: ${SOURCE_OBJS} ${SWIG_OBJS} ${LINK_OBJS}
	${LD_R} ${SLDFLAGS} $^ -o ${SUBDIR}${SO_TARGET}


# *****************************************************************************
# Autogenerate the Perl Wrapper
# *****************************************************************************
# These have to be two separate targets because the generate include has to be there to build to generated source
${GENERATED_INCLUDES}: ${INCLUDES} makepm.pl 
	@echo "==== Auto Generating $@"
	@chmod 777 makepm.pl
	@./makepm.pl ecmd $@

${GENERATED_SOURCE}: ${GENERATED_INCLUDES} makepm.pl 
	@echo "==== Auto Generating $@"
	@chmod 777 makepm.pl
	@./makepm.pl ecmd $@

