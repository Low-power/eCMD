# $Header$
# Makefile for the ecmd Perl Module

# Base info and default build rules
SUBDIR     := perlapi/
include ../makefile.rules

VPATH        := ../capi
INCLUDES     := ecmdClientCapi.H  ecmdDataBuffer.H  ecmdReturnCodes.H ecmdStructs.H ecmdClientPerlapi.H ecmdBit64.H
SOURCE       := ecmdClientPerlapi.C ecmdClientPerlapiFunc.C ecmdBit64.C
# This is the source generated by makepm.pl
GENERATED_SOURCE   := ecmdClientPerlapiFunc.C
GENERATED_INCLUDES := ecmdClientPerlapiFunc.H ecmdClientPerlapiIterators.H
# This source is generated by swig below
SWIG_SOURCE  := ecmdClientPerlapiSwig.C
DEFINES      := 
CFLAGS       := ${CFLAGS} -I../capi -I../dll
SWIGFLAGS    := ${SWIGFLAGS} -c++ -perl5 -exportall -const -I../capi -I../dll -DECMD_PERLAPI

# Ok, tack on all the extension stuff
VPATH        := ${VPATH}$(foreach ext, ${EXTENSIONS},:../ext/${ext}/capi:../ext/${ext}/perlapi)
VPATH := $(subst ${space},,${VPATH})

INCLUDES     := ${INCLUDES} $(foreach ext, ${EXTENSIONS}, ${ext}ClientPerlapi.H ${ext}ClientCapi.H )
CFLAGS       := ${CFLAGS} $(foreach ext, ${EXTENSIONS},-I../ext/${ext}/capi -I../ext/${ext}/perlapi -DECMD_$(shell echo ${ext} | tr "a-zA-Z" "A-Za-z")_EXTENSION_SUPPORT)
SWIGFLAGS    := ${SWIGFLAGS} $(foreach ext, ${EXTENSIONS},-I../ext/${ext}/perlapi -I../ext/${ext}/capi -DECMD_$(shell echo ${ext} | tr "a-zA-Z" "A-Za-z")_EXTENSION_SUPPORT)
SOURCE       := ${SOURCE} $(foreach ext, ${EXTENSIONS}, ${ext}ClientPerlapi.C ${ext}ClientPerlapiFunc.C)

# *****************************************************************************
# The Common Setup stuff
# *****************************************************************************
PM_TARGET := ecmd.pm
SO_TARGET := ecmd.so
LINK_OBJS := ${LINK_OBJS} ${OBJROOT}/capi/${OBJDIR}/ecmdClientCapi_${OS}.a
LINK_OBJS := ${LINK_OBJS} $(foreach ext, ${EXTENSIONS}, ${OBJROOT}/ext/${ext}/capi/${OBJDIR}/${ext}ClientCapi_${OS}.a)
VPATH     := ${VPATH}:${OBJPATH}
ifeq ($(strip ${SWIG}),)
  SWIG      := /gsa/${GSACELL}/projects/e/ecmd/utils/swig-1.3.39/${OS}/bin/swig
endif
ifeq ($(strip ${SWIGDIR}),)
  SWIGFLAGS := ${SWIGFLAGS} -I/gsa/${GSACELL}/projects/e/ecmd/utils/swig-1.3.39/${OS}/lib/perl5 -I/gsa/${GSACELL}/projects/e/ecmd/utils/swig-1.3.39/${OS}/lib
else
  SWIGFLAGS := ${SWIGFLAGS} -I${SWIGDIR}/perl5 -I${SWIGDIR}
endif

# *****************************************************************************
# The x86 Linux Setup stuff
# *****************************************************************************
ifeq (${OS},x86)
  SLDFLAGS  := ${SLDFLAGS} -L${OBJROOT}/capi/${OBJDIR} -lecmd_x86
  CFLAGS    := ${CFLAGS} -ftemplate-depth-30 -Wall
  ifeq ($(strip ${PERLINC}),)
    PERLINC   := -I${CTEPATH}/tools/perl/5.8.1/lib/5.8.1/i386_linux24/CORE
  endif
endif

# *****************************************************************************
# The ppc Linux Setup stuff
# *****************************************************************************
ifeq (${OS},ppc)
  SLDFLAGS  := ${SLDFLAGS} -L${OBJROOT}/capi/${OBJDIR} -lecmd_ppc
  CFLAGS    := ${CFLAGS} -ftemplate-depth-30 -Wall
  ifeq ($(strip ${PERLINC}),)
    PERLINC   := -I${CTEPATH}/tools/perl/5.8.1/lib/5.8.1/i386_linux24/CORE
  endif
endif

# *****************************************************************************
# The Aix Setup stuff
# *****************************************************************************
ifeq (${OS},aix)
  SLDFLAGS  := ${SLDFLAGS} -lpthreads -bI:${CTEPATH}/tools/perl/5.8.1/lib/5.8.1/rs_aix53/CORE/perl.exp -L ${OBJROOT}/capi/${OBJDIR} -l ecmd_aix
  CFLAGS    := ${CFLAGS}  -qstaticinline -qnoinline -+
  ifeq ($(strip ${PERLINC}),)
    PERLINC   := -I${CTEPATH}/tools/perl/5.8.1/lib/5.8.1/rs_aix53/CORE
  endif
  DEFINES   := ${DEFINES} -DHAS_BOOL=1
endif

# *****************************************************************************
# The Main Targets
# *****************************************************************************
all: dir ${SO_TARGET} ${PM_TARGET} test

clean: objclean
	rm -f ${SWIG_SOURCE}
	rm -f ${GENERATED_SOURCE}
	rm -f ${GENERATED_INCLUDES}

objclean:
	rm -rf ${OBJPATH}
	rm -f *.o

install:
	@echo "Installing eCMD PerlApi to ${INSTALL_PATH}/perlapi/`uname`/ ..."
	@mkdir -p ${INSTALL_PATH}/perlapi/`uname`/
	cp ${OBJPATH}${PM_TARGET} ${INSTALL_PATH}/perlapi/`uname`/.
	cp ${OBJPATH}${SO_TARGET} ${INSTALL_PATH}/perlapi/`uname`/.

dir:
	@mkdir -p ${OBJPATH}

test: ${SO_TARGET} ${PM_TARGET}
        ifeq (${OS},aix)
	@slibclean
        endif
	@echo "***** If you see perl load errors this build of the perl module is invalid, ignore ECMD_DLL_FILE errors ****"
	@./testBuild.pl

# *****************************************************************************
# Object Build Targets
# *****************************************************************************
SOURCE_OBJS  = $(basename $(SOURCE))
SOURCE_OBJS := $(addprefix ${OBJPATH}, $(SOURCE_OBJS))
SOURCE_OBJS := $(addsuffix .o, $(SOURCE_OBJS))
SWIG_OBJS    = $(basename $(SWIG_SOURCE))
SWIG_OBJS   := $(addprefix ${OBJPATH}, $(SWIG_OBJS))
SWIG_OBJS   := $(addsuffix .o, $(SWIG_OBJS))

# *****************************************************************************
# Compile code for the common C++ objects if their respective
# code has been changed.  Or, compile everything if a header
# file has changed.
# *****************************************************************************
$(SOURCE_OBJS): ${OBJPATH}%.o : %.C ${INCLUDES} ${GENERATED_INCLUDES}
	$(CC_R) -c $(CFLAGS) ${PERLINC} $< -o $@ $(DEFINES)

${SWIG_SOURCE}: ${INCLUDES} ${GENERATED_INCLUDES} ecmdClientPerlapi.i ecmdString.i ecmdVector.i ecmdList.i ecmdCommon.i ecmdClientPerlapi.pl 
	${SWIG} ${SWIGFLAGS} -o ${SWIG_SOURCE} -outdir ${OBJPATH} ecmdClientPerlapi.i

${PM_TARGET}: ${SWIG_SOURCE}
	${SWIG} ${SWIGFLAGS} -o ${SWIG_SOURCE} -outdir ${OBJPATH} ecmdClientPerlapi.i

${SWIG_OBJS}: ${OBJPATH}%.o : %.C ${SWIG_SOURCE}
	${CC_R} -c ${CFLAGS} ${PERLINC} $< -o $@ ${DEFINES}

# *****************************************************************************
# Create the Perl Shared Library
# *****************************************************************************
${SO_TARGET}: ${SOURCE_OBJS} ${SWIG_OBJS} ${LINK_OBJS}
	${LD_R} ${SLDFLAGS} $^ -o ${OBJPATH}${SO_TARGET}


# *****************************************************************************
# Autogenerate the Perl Wrapper
# *****************************************************************************
# These have to be two separate targets because the generate include has to be there to build to generated source
${GENERATED_INCLUDES}: ${INCLUDES} makepm.pl 
	@echo "==== Auto Generating $@"
	@chmod 777 makepm.pl
	@./makepm.pl ecmd $@

${GENERATED_SOURCE}: ${GENERATED_INCLUDES} makepm.pl 
	@echo "==== Auto Generating $@"
	@chmod 777 makepm.pl
	@./makepm.pl ecmd $@

# *****************************************************************************
# Debug rule for any makefile testing 
# *****************************************************************************
debug:
	@echo ${ECMD_ROOT}
	@echo ${SUBDIR}
