# Makefile for the ecmd Capi
# Written by Chris Engel

# $Header$

ECMD_ROOT   := ${PWD}/../
# The default build rules
include ../makefile.rules

INCLUDES     := ecmdClientCapi.H  ecmdDataBuffer.H  ecmdReturnCodes.H ecmdStructs.H ecmdUtils.H ecmdClientEnums.H ecmdSharedUtils.H ecmdDefines.H 
EXPORTS      := ${INCLUDES}
INT_INCLUDES := ecmdDllCapi.H
CAPI_SOURCE  := ecmdClientCapi.C ecmdUtils.C ecmdClientCapiFunc.C
SLIB_SOURCE  := ecmdDataBuffer.C ecmdStructs.C ecmdSharedUtils.C
CFLAGS       := ${CFLAGS}

# Tell the SEDC code we import that we just want the scomdef parser
INCLUDES     := ${INCLUDES} sedcScomdefParser.H sedcScomdefClasses.H sedcDefines.H sedcCommonParser.H sedcCommonClasses.H
CAPI_SOURCE  := ${CAPI_SOURCE} sedcScomdefParser.C sedcScomdefClasses.C sedcCommonParser.C sedcCommonClasses.C
VPATH        := ${VPATH}sedcScomdef
CFLAGS       := ${CFLAGS} -IsedcScomdef

# This is the source generated by makedll.pl
GENERATED_SOURCE   := ecmdClientCapiFunc.C
GENERATED_INCLUDES := ecmdDllCapi.H ecmdClientEnums.H

# *****************************************************************************
# The x86 Linux Setup stuff
# *****************************************************************************
ifeq (${OS},Linux_x86)
  TARGET   := ecmdClientCapi_x86.a
  SLIB     := libecmd_x86.so
  CFLAGS   := ${CFLAGS} -ftemplate-depth-25 -Wall
endif

# *****************************************************************************
# The ppc Linux Setup stuff
# *****************************************************************************
ifeq (${OS},Linux_ppc)
  TARGET   := ecmdClientCapi_ppc.a
  SLIB     := libecmd_ppc.so
  CFLAGS   := ${CFLAGS} -ftemplate-depth-25 -Wall
endif

# *****************************************************************************
# The Aix Setup stuff
# *****************************************************************************
ifeq (${OS},AIX)
  TARGET  := ecmdClientCapi_aix.a
  SLIB    := libecmd_aix.so
  CFLAGS  := ${CFLAGS} -+ -qstaticinline -qnoinline
endif

VPATH := ${VPATH}:${SUBDIR}

# *****************************************************************************
# The MPatrol Stuff
# *****************************************************************************
ifeq (${SITE},rchland.ibm.com)
  MPATROL_HOME := /afs/rchland/rel/common/cte/tools/ecmd/utils/mpatrol/
endif
ifeq (${SITE},awd.austin.ibm.com)
  MPATROL_HOME := /afs/awd.austin.ibm.com/projects/cte/tools/ecmd/utils/mpatrol/
endif
ifeq (${MPATROL},yes) 
  DEFINES   := ${DEFINES} -DENABLE_MPATROL

  ifeq (${OS},Linux_x86)
    CFLAGS  := ${CFLAGS} -fcheck-memory-usage -I${MPATROL_HOME}include/
    LDFLAGS := ${LDFLAGS} -L${MPATROL_HOME}x86/ -lmpatrol -lbfd 
    TARGET   := ecmdClientCapi_x86_mp.a
    SLIB     := libecmd_x86_mp.so
  endif

  ifeq (${OS},AIX)
    CFLAGS  := ${CFLAGS} -I${MPATROL_HOME}include/
    LDFLAGS := ${LDFLAGS} -lld ${MPATROL_HOME}/aix/libmpatrol.a
    SLDFLAGS := ${SLDFLAGS} -lld ${MPATROL_HOME}/aix/libmpatrol.a
    TARGET  := ecmdClientCapi_aix_mp.a
    SLIB    := libecmd_aix_mp.so
  endif


endif

# *****************************************************************************
# The Main Targets
# *****************************************************************************
#all: dir autogen ${TARGET} ${SLIB}
all: dir ${TARGET} ${SLIB}
	@touch t.o t.a t.so
	@mv *.o *.a *.so ${SUBDIR}
	@rm ${SUBDIR}/t.o ${SUBDIR}/t.a ${SUBDIR}/t.so
	@echo "Exporting eCMD Client Api/Shared Lib to export/ ..."
	@cp -p ${SUBDIR}${TARGET} export/
	@cp -p ${SUBDIR}${SLIB} export/
	@cp -p ${EXPORTS} export/
	-@cp -p ecmdDllCapi.H ../dll/

clean: objclean exportclean
	rm -f $(GENERATED_SOURCE)
	rm -f $(GENERATED_INCLUDES)

objclean:
	rm -rf ${SUBDIR} 

exportclean:
	rm -rf export/

install:
	@echo "Installing eCMD Client Api to ${INSTALL_PATH}/capi/ ..."
	@mkdir -p ${INSTALL_PATH}/capi/
	cp export/${TARGET} ${INSTALL_PATH}/capi/.
	cp ${EXPORTS} ${INSTALL_PATH}/capi/.
	@echo "Installing eCMD Shared Lib to ${INSTALL_PATH}/lib/ ..."
	@mkdir -p ${INSTALL_PATH}/lib/
	cp export/${SLIB} ${INSTALL_PATH}/lib/.

dir:
	@mkdir -p ${SUBDIR}
	@mkdir -p export



# *****************************************************************************
# Object Build Targets
# *****************************************************************************
CAPI_SOURCE_OBJS  = $(basename $(CAPI_SOURCE))
CAPI_SOURCE_OBJS := $(addsuffix .o, $(CAPI_SOURCE_OBJS))
SLIB_SOURCE_OBJS  = $(basename $(SLIB_SOURCE))
SLIB_SOURCE_OBJS := $(addsuffix .o, $(SLIB_SOURCE_OBJS))

# *****************************************************************************
# Compile code for the common C++ objects if their respective
# code has been changed.  Or, compile everything if a header
# file has changed.
# *****************************************************************************
$(CAPI_SOURCE_OBJS): %.o : %.C ${INCLUDES} ${INT_INCLUDES}
	$(CC) -c $(CFLAGS) $< -o $@ $(DEFINES)
$(SLIB_SOURCE_OBJS): %.o : %.C ${INCLUDES} ${INT_INCLUDES}
	$(CC) -c $(CFLAGS) $< -o $@ $(DEFINES)


# *****************************************************************************
# Create the Client Archive
# *****************************************************************************
${TARGET}: ${CAPI_SOURCE_OBJS}
	@echo "Creating Static client library ..."
	ar r $@ $^

# *****************************************************************************
# Create the Shared Library
# *****************************************************************************
${SLIB}: ${SLIB_SOURCE_OBJS}
	@echo "Linking Shared Library ..."
	$(LD) ${SLDFLAGS} -o $@ $^ 



# *****************************************************************************
# Autogenerate the Client side of the Dll
# *****************************************************************************
$(GENERATED_SOURCE) $(GENERATED_INCLUDES): ecmdClientCapi.H makedll.pl
	@echo "==== Auto Generating $@"
	@chmod 777 makedll.pl
	@./makedll.pl ecmd $@
