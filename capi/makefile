# $Header$
# Makefile for the ecmd capi

# Base info and default build rules
SUBDIR     := capi/
include ../makefile.rules

CAPI_INCLUDES := ecmdClientCapi.H  ecmdDataBuffer.H  ecmdReturnCodes.H ecmdStructs.H ecmdUtils.H ecmdClientEnums.H ecmdSharedUtils.H ecmdDefines.H  prdfCompressBuffer.H
INT_INCLUDES  := ecmdDllCapi.H
CAPI_SOURCE   := ecmdClientCapi.C ecmdUtils.C ecmdClientCapiFunc.C
SLIB_SOURCE   := ecmdDataBuffer.C ecmdStructs.C ecmdSharedUtils.C
CFLAGS        := ${CFLAGS}

# Tell the SEDC code we import that we just want the scomdef parser
SEDC_INCLUDES := ${INCLUDES} sedcScomdefParser.H sedcScomdefClasses.H sedcDefines.H sedcCommonParser.H sedcCommonClasses.H
CAPI_SOURCE   := ${CAPI_SOURCE} sedcScomdefParser.C sedcScomdefClasses.C sedcCommonParser.C sedcCommonClasses.C
VPATH         := ${VPATH}sedcScomdef
CFLAGS        := ${CFLAGS} -IsedcScomdef

# Variables used for the build
INCLUDES      := ${CAPI_INCLUDES} ${SEDC_INCLUDES}

# This is the source generated by makedll.pl
GENERATED_SOURCE   := ecmdClientCapiFunc.C
GENERATED_INCLUDES := ecmdDllCapi.H ecmdClientEnums.H

# Variables for install
SEDC_INCLUDES_INSTALL := $(addprefix sedcScomdef/, $(SEDC_INCLUDES))

# *****************************************************************************
# The Common Setup stuff
# *****************************************************************************
TARGET   := ecmdClientCapi_${OS}.a
SLIB     := libecmd_${OS}.so

# *****************************************************************************
# The x86 Linux Setup stuff
# *****************************************************************************
ifeq (${OS},x86)
  CFLAGS   := ${CFLAGS} -ftemplate-depth-25 -Wall
endif

# *****************************************************************************
# The ppc Linux Setup stuff
# *****************************************************************************
ifeq (${OS},ppc)
  CFLAGS   := ${CFLAGS} -ftemplate-depth-25 -Wall
endif

# *****************************************************************************
# The Aix Setup stuff
# *****************************************************************************
ifeq (${OS},aix)
  CFLAGS  := ${CFLAGS} -+ -qstaticinline -qnoinline
endif

VPATH := ${VPATH}:${OBJPATH}

# *****************************************************************************
# The Main Targets
# *****************************************************************************
all: dir ${TARGET} ${SLIB}
	-@cp -p ecmdDllCapi.H ../dll/

clean: objclean
	rm -f $(GENERATED_SOURCE)
	rm -f $(GENERATED_INCLUDES)

objclean:
	rm -rf ${OBJPATH} 

install:
	@echo "Installing eCMD Client Api to ${INSTALL_PATH}/capi/ ..."
	@mkdir -p ${INSTALL_PATH}/capi/
	cp ${OBJPATH}/${TARGET} ${INSTALL_PATH}/capi/.
	cp ${CAPI_INCLUDES} ${INSTALL_PATH}/capi/.
	cp ${SEDC_INCLUDES_INSTALL} ${INSTALL_PATH}/capi/.
	@echo "Installing eCMD Shared Lib to ${INSTALL_PATH}/lib/ ..."
	@mkdir -p ${INSTALL_PATH}/lib/
	cp ${OBJPATH}/${SLIB} ${INSTALL_PATH}/lib/.

dir:
	@mkdir -p ${OBJPATH}

# *****************************************************************************
# Object Build Targets
# *****************************************************************************
CAPI_SOURCE_OBJS  = $(basename $(CAPI_SOURCE))
CAPI_SOURCE_OBJS := $(addprefix ${OBJPATH}, $(CAPI_SOURCE_OBJS))
CAPI_SOURCE_OBJS := $(addsuffix .o, $(CAPI_SOURCE_OBJS))
SLIB_SOURCE_OBJS  = $(basename $(SLIB_SOURCE))
SLIB_SOURCE_OBJS := $(addprefix ${OBJPATH}, $(SLIB_SOURCE_OBJS))
SLIB_SOURCE_OBJS := $(addsuffix .o, $(SLIB_SOURCE_OBJS))

# *****************************************************************************
# Compile code for the common C++ objects if their respective
# code has been changed.  Or, compile everything if a header
# file has changed.
# *****************************************************************************
$(CAPI_SOURCE_OBJS): ${OBJPATH}%.o : %.C ${INCLUDES} ${INT_INCLUDES}
	$(CC) -c $(CFLAGS) $< -o $@ $(DEFINES)
$(SLIB_SOURCE_OBJS): ${OBJPATH}%.o : %.C ${INCLUDES} ${INT_INCLUDES}
	$(CC) -c $(CFLAGS) $< -o $@ $(DEFINES)


# *****************************************************************************
# Create the Client Archive
# *****************************************************************************
${TARGET}: ${CAPI_SOURCE_OBJS}
	@echo "Creating Static client library ..."
	${AR} r ${OBJPATH}${TARGET} $^

# *****************************************************************************
# Create the Shared Library
# *****************************************************************************
${SLIB}: ${SLIB_SOURCE_OBJS}
	@echo "Linking Shared Library ..."
	$(LD) ${SLDFLAGS} -o ${OBJPATH}${SLIB} $^

# *****************************************************************************
# Autogenerate the Client side of the Dll
# *****************************************************************************
$(GENERATED_SOURCE) $(GENERATED_INCLUDES): ecmdClientCapi.H makedll.pl
	@echo "==== Auto Generating $@"
	@chmod 777 makedll.pl
	@./makedll.pl ecmd $@

# *****************************************************************************
# Debug rule for any makefile testing 
# *****************************************************************************
debug:
	@echo ${ECMD_ROOT}
	@echo ${SUBDIR}
