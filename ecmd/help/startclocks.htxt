
Syntax: startclocks                                   [-force] [-a#] [-k#] [-n#] [-s#] 
        startclocks -domain <ConvenienceClockDomain>] [-force] [-a#] [-k#] [-n#] [-s#]
        startclocks <Chip[.ChipUnit]> [<ClockDomain>] [-force] [-coe] [-a#] [-k#] [-n#] [-s#] [-p#] [-c#]

        ECMD:           Core Common Function

        Function:       Start clocks on a particular domain/chip or the entire system

                        NOTE : This command typically does not start clocks in a way
                        that the chip will be functional to run instructions.  To do
                        that use the isteps command to initialize the system.

        Parameters:
        --------------------------------------------------------------------------------
        Chip            Specifies the chip to operate on.
        ChipUnit [opt]  If you are using ChipUnits, you also specify your ChipUnit
                        w/o  ChipUnit: pu
                        with ChipUnit: pu.mc

        ClockDomain     Clock domain to start on chip target. Must specify with Chip
                        Names are documented in the scandef for the targetted chip.

        -domain         Specifies we are using a convenience clock domain.

        ConvenienceClockDomain The convenience clock domains are documented in the eCMD
                        System specific document for your system type. Must be specified
                        with -domain

        -force    [opt] Force clocks on regardless of current state

        -coe [optional] Continue On Error. If an error occurs, continues to the next target
                        instead of exiting.  Any error status is returned at the end.

        -a#  [optional] Operate on all levels of targeting with same value.

        -k#  [optional] Specify which cage to act on (0 is default).

        -n#  [optional] Specify which node to act on (0 is default).

        -s#  [optional] Specify which slot to act on (0 is default).

        -p#  [optional] Specify which chip position to act on (0 is default).

        -c#  [optional] Specify which core/chipUnit to act on (0 is default).
        --------------------------------------------------------------------------------

        Examples:       > startclocks pu -k0 -n1 -p3
                        > startclocks pu FBC_DOMAIN -k1 -n2
                        > startclocks 
                        > startclocks -domain ALL_PU_CHIPS

