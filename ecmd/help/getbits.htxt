
Syntax: getbits ChipSelect RingName StartPos NumBits  [-exp data] [-k#] [-n#] [-p#] [-c#]
                        [-o<format>]

        ECMD:           Core Common Function

        Function:       Long scans bits out of a chip's selected ring. (non-destructive)

        Parameters:
        --------------------------------------------------------------------------------
        ChipSelect      Specifies the chip to operate on.  

        RingName        Specifies chip ring to operate on.  For a list of available
                        rings, use the ecmdquery command.

                        Ex:  ecmdquery rings memctrl
                             ecmdquery rings pu
                        
        StartPos        Specifies starting bit position in Decimal.

        NumBits         Specifies number of bits to get from starting position (Decimal)
                        Specify the keyword 'all' to fetch from startPos to end of ring.

        -exp [optional] Provide expected data.  Returns error if expected != actual.  No
                        error/no data returned if expected == actual. 

        -o<format>[opt] Specifies the format type of both the output and 
                        the expect-value: default 'b'
        
        -X   [optional] For simulation use only.  Must be used to display any Xstates
                        data in ring.

        -k#  [optional] Specify which cage to act on (0 is default). Specify -kall
                        to act on all cages.

        -n#  [optional] Specify which node to act on (0 is default). Specify -nall
                        to act on all nodes.

        -p#  [optional] Specify which chip position to act on (0 is default). Specify 
                        -pall to act on all chips.

        -c#  [optional] Specify which processor core to act on (0 is default). Specify
                        -call to act on all cores.
 
        --------------------------------------------------------------------------------

        Examples:       getbits pu stat 0 15 
                        getbits pu cp_fxu 0 32 -oxw -exp feedbeef
                        getbits memctrl idreg 16 all
