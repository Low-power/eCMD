
Syntax: getbits <Chip[.ChipUnit]> <RingName> <StartPos> <NumBits>  [-exp <data>] 
                     [-coe] [-a#] [-k#] [-n#] [-s#] [-p#] [-c#] [-o<format>] [-i<format>] 
        getbits <Chip[.ChipUnit]> <RingName> -f<filename> [-coe] [-a#] [-k#] [-n#] [-s#] [-p#] [-c#]

        ECMD:           Core Common Function

        Function:       Long scans bits out of a chip's selected ring. (non-destructive)
                        Ring is either displayed to screen or written to file specified
                        with the -f option.

        Parameters:
        --------------------------------------------------------------------------------
        Chip            Specifies the chip to operate on.
        ChipUnit [opt]  If you are using ChipUnits, you also specify your ChipUnit
                        w/o  ChipUnit: pu
                        with ChipUnit: pu.mc

        RingName        Specifies chip ring to operate on.  For a list of available
                        rings, use the ecmdquery command.

                        Ex:  ecmdquery rings memctrl
                             ecmdquery rings pu
                        
        StartPos        Specifies starting bit position in Decimal.

        NumBits         Specifies number of bits to get from starting position (Decimal)
                        Specify the keyword 'end' to fetch from startPos to end of ring.

        -exp [optional] Provide expected data.  Returns error if expected != actual.  No
                        error/no data returned if expected == actual.  
                        Format specified by -i<format>

        -o<format>[opt] Specifies the format type of the output : default 'b'
                        Run 'ecmdquery formats' to view available formats

        -i<format>[opt] Specifies the format type of expect data : default 'b'
                        Run 'ecmdquery formats' to view available formats

        -f<filename>[o] Specifies the filename that the ring data should be written to
                        Uses ecmdDataBuffer::ECMD_SAVE_FORMAT_ASCII format
        	
        -coe [optional] Continue On Error. If an error occurs, continues to the next target
                        instead of exiting.  Any error status is returned at the end.

        -k#  [optional] Specify which cage to act on (0 is default).

        -n#  [optional] Specify which node to act on (0 is default).

        -s#  [optional] Specify which slot to act on (0 is default).

        -p#  [optional] Specify which chip position to act on (0 is default).

        -c#  [optional] Specify which core/chipUnit to act on (0 is default).
        --------------------------------------------------------------------------------

        Examples:       > getbits pu stat 0 15 
                        > getbits pu cp_fxu 0 32 -oxw -exp feedbeef
                        > getbits memctrl idreg 16 end
                        > getbits memctrl cp_fxu -ffxuRingDump.dump
