
Syntax: gettracearray <Chip[.ChipUnit]> <ArrayName> [<ArrayName2> ...] [-o<format>] 
                                  [-nostopstart] [-coe] [-a#] [-k#] [-n#] [-s#] [-p#] [-c#]

        ECMD:           Core Common Function

        Function:       Read the specified chip trace array.

        Parameters:
        --------------------------------------------------------------------------------
        Chip            Specifies the chip to operate on.
        ChipUnit [opt]  If you are using ChipUnits, you also specify your ChipUnit
                        w/o  ChipUnit: pu
                        with ChipUnit: pu.mc

        ArrayName       Name of array to read from.

        -o<format>[opt] Output Format : default 'xl'
                        Run 'ecmdquery formats' to view available formats

        -nostopstart[o] Don't stop and start the trace arrays while dumping.

        -coe [optional] Continue On Error. If an error occurs, continues to the next target
                        instead of exiting.  Any error status is returned at the end.

        -k#  [optional] Specify which cage to act on (0 is default).

        -n#  [optional] Specify which node to act on (0 is default).

        -s#  [optional] Specify which slot to act on (0 is default).

        -p#  [optional] Specify which chip position to act on (0 is default). Specify
                        -pall to act on all chips.

        -c#  [optional] Specify which core/chipUnit to act on (0 is default). Specify
                        -call to act on all cores/chipUnits.
        --------------------------------------------------------------------------------

        Examples:       > gettracearray pu fbc -p0,1 
