
Syntax: getarray <Chip[.ChipUnit]> <ArrayName> <ArrayIndex> [NumEntries] [-o<format>] 
                     [-exp <data> [-i<format>] [-mask <data>]]
                     [-coe] [-a#] [-k#] [-n#] [-s#] [-p#] [-c#]

        ECMD:           Core Common Function

        Function:       Read the specified chip array.

        Parameters:
        --------------------------------------------------------------------------------
        Chip            Specifies the chip to operate on.
        ChipUnit [opt]  If you are using ChipUnits, you also specify your ChipUnit
                        w/o  ChipUnit: pu
                        with ChipUnit: pu.mc

        ArrayName       Name of array to read from.

        ArrayIndex      Array Index in right aligned hex OR 'ALL' to fetch all entries.

        NumEntries[opt] Number of consecutive entries to display
                        Address is incremented by 1

        -o<format>[opt] Output Format : default 'xl'
                        Run 'ecmdquery formats' to view available formats

        -i<format>[opt] Specifies the format type of expect and mask data : default 'xl'
                        Run 'ecmdquery formats' to view available formats
        
        -exp [optional] Provide expected data.  Returns error if expected != actual.  No
                        error/no data returned if expected == actual.

        -mask     [opt] Array data is AND'ed with the mask bits. Only for use with -exp.

        -coe [optional] Continue On Error. If an error occurs, continues to the next target
                        instead of exiting.  Any error status is returned at the end.

        -k#  [optional] Specify which cage to act on (0 is default).

        -n#  [optional] Specify which node to act on (0 is default).

        -s#  [optional] Specify which slot to act on (0 is default).

        -p#  [optional] Specify which chip position to act on (0 is default).

        -c#  [optional] Specify which core/chipUnit to act on (0 is default).
        --------------------------------------------------------------------------------

        Examples:       > getarray pu xgpr0 deadbeef80000000 -p0,1 -c1
                        > getarray pu xgpr0 ALL
