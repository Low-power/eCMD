
Syntax: pollscom <ChipSelect> <ScanCommAddr> [-exp <data> [-mask <data>]] [-o<format>] 
                              [-i<format>] [-limit #[s|c]] [-interval #[s|c]] [-verbose] 
                              [-k#] [-n#] [-s#] [-p#] [-c#]

        ECMD:           Core Common Function

        Function:       Repeatedly gets Scan Communications registers until expected data
                        matches actual data or until polling limit is reached.

        Parameters:
        --------------------------------------------------------------------------------
        ChipSelect      Chip to get scancom data from.  

        ScanCommAddr    Address in hex.

        -exp      [opt] Provide expected data.  Returns error if expected != actual.  No
                        error/no data returned if expected == actual.

        -mask     [opt] Scom data is AND'ed with the mask bits before checking against
                        expected value.

        -o<format>[opt] Specifies the format type of the output : default 'xl'
                        Run 'ecmdquery formats' to view available formats

        -i<format>[opt] Specifies the format type of expect and mask data : default 'xl'
                        Run 'ecmdquery formats' to view available formats
        
        -limit #  [opt] Max polling number in iterations, seconds, or cycles. To specify
                        in seconds, append an 's' to #.  To specify number of cycles for 
                        simulation, append a 'c' to #.  If limit is not specified, 
                        defaults to 1000 iterations.  If limit = 0, polls indefinitely.

        -interval # [opt] Time between getscoms. To specify in seconds, append an 's' 
                        to #.  To specify number of cycles for simulation, append a 
                        'c' to #.  If interval is not specified it defaults to 5secs.
        
        -verbose  [opt] Prints warning message after each getscom if actual != expected.

        -k#  [optional] Specify which cage to act on (0 is default). Specify -kall
                        to act on all cages.

        -n#  [optional] Specify which node to act on (0 is default). Specify -nall
                        to act on all nodes.

        -s#  [optional] Specify which slot to act on (0 is default). Specify -sall
                        to act on all slots.

        -p#  [optional] Specify which chip position to act on (0 is default). Specify
                        -pall to act on all chips.

        -c#  [optional] Specify which processor core to act on (0 is default). Specify
                        -call to act on all cores.
        --------------------------------------------------------------------------------

        Examples:       pollscom pu 800009 -exp feed000000000001 -limit 30s -interval 10s -verbose -p1
                        pollscom pu 800009 -exp feed000000000001 -mask ffff00000000ffff -limit 10
                        pollscom memctrl 400020 -limit 100000c -interval 5000c

                        
