
Syntax: putgpr <GprNum> [<Start> <Numbits>] <Data> [-i<format>] [-b<modifier>] 
                               [-a#] [-k#] [-n#] [-s#] [-p#] [-c#] [-t#]

        ECMD:           Core Common Function

        Function:       Write the specified data to a Processor GPR 
                        (General Purpose Register)

        Parameters:
        --------------------------------------------------------------------------------

        GprNum          Gpr Entry to write (Decimal)

        Start     [opt] Starting bit position within the scom.  Specify with numbits.

        Numbits   [opt] Number of bits to insert. Specify with Start. If Start and Numbits                         are not specified, start = 0 and numbits is calculated from
                        length of data string, rest of Scom register is padded with zeros.

        Data            Data to insert into GPR.
                        Format specified by -i<format>

        -i<format>[opt] Specifies the format type of input data : default 'xl'
                        Run 'ecmdquery formats' to view available formats

        -b<mod>[opt]    Bit modifier to apply to current ring data.
                        Run 'ecmdquery formats' to view available modifiers

        -a#  [optional] Operate on all levels of targeting with same value.

        -k#  [optional] Specify which cage to act on (0 is default).

        -n#  [optional] Specify which node to act on (0 is default).

        -s#  [optional] Specify which slot to act on (0 is default).

        -p#  [optional] Specify which chip position to act on (0 is default).

        -c#  [optional] Specify which core/chipUnit to act on (0 is default).

        -t#  [optional] Specify which processor thread to act on (0 is default). Specify                         -tall to act on all threads, -talive to act on all alive threads.

        --------------------------------------------------------------------------------

        Examples:       > putgpr 10 deadbeef80000000  -p0,1 -c1
