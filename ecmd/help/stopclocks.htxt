
Syntax: stopclocks                                   [-force] [-a#] [-k#] [-n#] [-s#] 
        stopclocks -domain <ConvenienceClockDomain>] [-force] [-a#] [-k#] [-n#] [-s#]
        stopclocks <Chip[.ChipUnit]> [<ClockDomain>] [-coe] [-force] [-a#] [-k#] [-n#] [-s#] [-p#] [-c#]

        ECMD:           Core Common Function

        Function:       Stop clocks on a particular domain/chip or the whole system.

        Parameters:
        --------------------------------------------------------------------------------
        Chip            Specifies the chip to operate on.
        ChipUnit [opt]  If you are using ChipUnits, you also specify your ChipUnit
                        w/o  ChipUnit: pu
                        with ChipUnit: pu.mc

        ClockDomain     Clock domain to stop on chip target. Must specify with Chip
                        Names are documented in the scandef for the targetted chip.

        -domain         Specifies we are using a convenience clock domain.

        ConvenienceClockDomain The convenience clock domains are documented in the eCMD
                        System specific document for your system type. Must be specified
                        with -domain

        -force    [opt] Force clocks off regardless of current state

        -a#  [optional] Operate on all levels of targeting with same value.

        -k#  [optional] Specify which cage to act on (0 is default).

        -n#  [optional] Specify which node to act on (0 is default).

        -s#  [optional] Specify which slot to act on (0 is default).

        -p#  [optional] Specify which chip position to act on (0 is default).

        -c#  [optional] Specify which core/chipUnit to act on (0 is default).
        --------------------------------------------------------------------------------

        Examples:       > stopclocks pu -k0 -n1 -p3
                        > stopclocks pu FBC_DOMAIN -k1 -n2
                        > stopclocks 
                        > stopclocks -domain ALL_PU_CHIPS
