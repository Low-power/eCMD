
Syntax: putlatch <Chip[.ChipUnit]> [<RingName>] <LatchName> [<Start> <Numbits>] <Data>
              [-exact | -partial]  [-i<format>] [-b<modifier>] [-coe] [-k#] [-n#] [-s#] [-p#] [-c#]

        ECMD:           Core Common Function

        Function:       Puts a value for a specified register into a ring.  The first  
                        register in the scandef file that exactly matches the RegName 
                        (not including parenthesis) will be used. If the register is 
                        broken into multiple lines, the register lengths are 
                        concatenated to form one complete register.

                        With the -exact option, eCMD searches for an exact match, and 
                        will alter only the first latch that exactly matches (excluding
                        any parentheses). This option also enables searching the scandef
                        with a hash file which greatly increases performance.

        Parmeters:
        --------------------------------------------------------------------------------
        Chip            Specifies the chip to operate on.
        ChipUnit [opt]  If you are using ChipUnits, you also specify your ChipUnit
                        w/o  ChipUnit: pu
                        with ChipUnit: pu.mc

        RingName        Specifies chip ring to operate on.  For a list of available
                        rings, use the ecmdquery command.

                        Ex:  ecmdquery rings memctrl
                             ecmdquery rings pu

        LatchName       Desired latchs to put in the ring.  

        Start     [opt] Offset at which to begin writing data.  Also specify Numbits.

        Numbits   [opt] Number of bits to insert.  If not specified, start = 0 and 
                        numbits is calculated from the length of the Data string.  

        Data            Data to be written to the register specified.  
                        Format specified by -i<format>

        -exact    [opt] No pattern matching. Instead, search for exact latch name. (default)

        -partial  [opt] Use pattern matching to find latch name, can be considerably slower.

        -i<format>[opt] Specifies the format type of input data : default 'xl'
                        Run 'ecmdquery formats' to view available formats

        -b<mod>[opt]    Bit modifier to apply to current ring data.
                        Run 'ecmdquery formats' to view available modifiers

        -coe [optional] Continue On Error. If an error occurs, continues to the next target
                        instead of exiting.  Any error status is returned at the end.

        -k#  [optional] Specify which cage to act on (0 is default). Specify -kall
                        to act on all cages.

        -n#  [optional] Specify which node to act on (0 is default). Specify -nall
                        to act on all nodes.

        -s#  [optional] Specify which slot to act on (0 is default). Specify -sall
                        to act on all slots.

        -p#  [optional] Specify which chip position to act on (0 is default). Specify 
                        -pall to act on all chips.

        -c#  [optional] Specify which core/chipUnit to act on (0 is default). Specify
                        -call to act on all cores/chipUnits.
 
        --------------------------------------------------------------------------------
        
        Example:        putlatch pu cp_fpu GCP.PFPU.FP_UNIT0.FPA_LATCH -ix feed
