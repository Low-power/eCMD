# Makefile for the ecmd CIP Extension Capi
# Written by Chris Engel

# $Header$

EXTENSION_NAME   := cip
EXTENSION_NAME_u := $(shell echo ${EXTENSION_NAME} | tr 'a-z' 'A-Z')
EXTENSION_NAME_u1 := $(shell perl -e 'printf(ucfirst(${EXTENSION_NAME}))')

OS           := $(shell uname)

INCLUDES     := cipClientCapi.H cipStructs.H
INT_INCLUDES := ecmdClientCapi.H  ecmdDataBuffer.H  ecmdReturnCodes.H ecmdStructs.H ecmdUtils.H ecmdClientEnums.H

# This is source I have to write
SOURCE       := 

# These are the files that will be autogenerated from the template
TEMPLATE_SOURCE := cipClientCapi.C cipDllCapi.C

# These are the files that are auto-gened with makedll.pl
AUTOGEN_SOURCE  := cipClientCapiFunc.C


DEFINES      := 
CFLAGS       := -I. -I../../../capi/export -g

SOURCE       := ${SOURCE} cipClientCapi.C ${AUTOGEN_SOURCE}




###### NOTHING BELOW HERE SHOULD NEED MODIFICATION



# *****************************************************************************
# The Linux Setup stuff
# *****************************************************************************
ifeq (${OS},Linux)
  SUBDIR   := linux/
  CC := g++
  TARGET = ${EXTENSION_NAME}ClientCapi_x86.a
  CFLAGS := ${CFLAGS} -ftemplate-depth-25
  GPATH   := ${SUBDIR}
endif

# *****************************************************************************
# The Aix Setup stuff
# *****************************************************************************
ifeq (${OS},AIX)
  SUBDIR  := aix/
  CC := xlC -+
  TARGET = ${EXTENSION_NAME}ClientCapi_aix.a
  CFLAGS  := ${CFLAGS} -qstaticinline
endif

VPATH := ${SUBDIR}:../../../capi/export:../../template/capi


# *****************************************************************************
# The Main Targets
# *****************************************************************************
all: dir ${TARGET} ${EXTENSION_NAME}DllCapi.C
	@touch t.o t.a
	@mv *.o *.a ${SUBDIR}
	@rm ${SUBDIR}/t.o ${SUBDIR}/t.a
	@echo "Exporting ${EXTENSION_NAME_u} eCMD Client Extension Api to export/ ..."
	@cp ${SUBDIR}${TARGET} export/
	@cp ${INCLUDES} export/

clean:
	rm -rf ${SUBDIR}
	rm ${EXTENSION_NAME}ClientCapiFunc.C
	rm ${EXTENSION_NAME}ClientCapi.C
	rm ${EXTENSION_NAME}DllCapi.C

dir:
	@mkdir -p ${SUBDIR}
	@mkdir -p export



# *****************************************************************************
# Object Build Targets
# *****************************************************************************
SOURCE_OBJS  = $(basename $(SOURCE))
SOURCE_OBJS := $(addsuffix .o, $(SOURCE_OBJS))

# *****************************************************************************
# Compile code for the common C++ objects if their respective
# code has been changed.  Or, compile everything if a header
# file has changed.
# *****************************************************************************
$(SOURCE_OBJS): %.o : %.C ${INCLUDES} ${INT_INCLUDES}
	$(CC) -c $(CFLAGS) $< -o $@ $(DEFINES)


# *****************************************************************************
# Create the Client Archive
# *****************************************************************************
${TARGET}: ${SOURCE_OBJS}
	ar r $@ $^



# *****************************************************************************
# Autogenerate the Client side of the Dll
# *****************************************************************************
${EXTENSION_NAME}ClientCapiFunc.C ${EXTENSION_NAME}DllCapi.H ${EXTENSION_NAME}ClientEnums.H: ${EXTENSION_NAME}ClientCapi.H makedll.pl 
	@echo "==== Auto Generate Client Functions"
	@chmod 777 makedll.pl
	./makedll.pl ${EXTENSION_NAME}

# *****************************************************************************
# Template source files
# *****************************************************************************
${TEMPLATE_SOURCE}: ${EXTENSION_NAME}% : template%
	@echo "Generating $@ ..."
	@sed "s/template/${EXTENSION_NAME}/g" $< | sed "s/TEMPLATE/${EXTENSION_NAME_u}/g" | sed "s/Template/${EXTENSION_NAME_u1}/g" > $@
