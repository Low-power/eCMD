// setSbeError.H
// This file is generated by the perl script parseErrorInfo.pl

// When SBE code creates an error, it produces an error value
// that matches a value in the HwpReturnCode enum in
// fapiHwpReturnCodes.H. The SBE uses the __ASSEMBLER__
// primitives in hwpReturnCodes.H to do this. The function
// that extracts the error value from the SBE needs to call
// FAPI_SET_HWP_ERROR to create the error and get all the
// actions in the error XML file performed, but that macro can
// only be called with the enumerator, not the value. This
// FAPI_SET_SBE_ERROR macro can be called instead, it calls
// FAPI_SET_HWP_ERROR with the correct error enumerator.
// Errors containing <sbeError/> in their XML are supported
// in this macro.

// Note that it is expected that this macro will be called
// in one place (the function that extracts the error from
// the SBE), if this changes and it is called in multiple
// places then the macro could be turned into a function to
// avoid the code size increase of expanding the macro in
// multiple places. The function approach is slightly more
// complicated, there is an extra C file and the function
// must take a parameter for the generic chip ID in the error
// XML.

#ifndef FAPI2_SETSBEERROR_H_
#define FAPI2_SETSBEERROR_H_

#define FAPI_SET_SBE_ERROR(RC, ERRVAL)\
{\
switch (ERRVAL)\
{\
    default:\
        FAPI_SET_HWP_ERROR(RC, RC_SBE_UNKNOWN_ERROR);\
        break;\
}\
}

#endif
