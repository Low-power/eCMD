// hwp_error_info.H
// This file is generated by the perl script parseErrorInfo.pl

#ifndef FAPI2_HWPERRORINFO_H_
#define FAPI2_HWPERRORINFO_H_

#include <target.H>
#include <return_code.H>
#include <plat_trace.H>
/**
 * @brief Error Information macros and HwpFfdcId enumeration
 */
#define RC_FAPI2_BUFFER_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_FAPI2_BUFFER_CALL_FUNCS_TO_COLLECT_REG_FFDC(RC) 
#define RC_FAPI2_BUFFER_ADD_ERROR_INFO(RC) \
{ \
  const void * l_objects[] = {BUFFER}; \
  fapi2::ErrorInfoEntry l_entries[2]; \
  l_entries[0].iv_type = fapi2::EI_TYPE_FFDC; \
  l_entries[0].ffdc.iv_ffdcObjIndex = 0; \
  l_entries[0].ffdc.iv_ffdcId = fapi2::RC_FAPI2_BUFFER_BUFFER; \
  l_entries[0].ffdc.iv_ffdcSize = fapi2::getErrorInfoFfdcSize(BUFFER); \
  l_entries[1].iv_type = fapi2::EI_TYPE_PROCEDURE_CALLOUT; \
  l_entries[1].proc_callout.iv_procedure = fapi2::ProcedureCallouts::CODE; \
  l_entries[1].proc_callout.iv_calloutPriority = fapi2::CalloutPriorities::HIGH; \
  RC.addErrorInfo(l_objects, l_entries, 2); \
}
namespace fapi2
{

/**
 * @brief Enumeration of FFDC identifiers
 */
enum HwpFfdcId
{
    RC_FAPI2_BUFFER_BUFFER = 0x820d832e,
};

}



#endif
