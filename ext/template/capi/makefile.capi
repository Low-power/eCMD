# $Header$
# Makefile for the ecmd Extensions

# Base info and default build rules
SUBDIR     := ext/${EXTENSION_NAME}/capi/
include ../../../makefile.rules

EXTENSION_NAME_u := $(shell echo ${EXTENSION_NAME} | tr 'a-z' 'A-Z')
EXTENSION_NAME_u1 := $(shell perl -e 'printf(ucfirst(${EXTENSION_NAME}))')

CAPI_SOURCE   := ${CAPI_SOURCE} ${EXTENSION_NAME}ClientCapi.C
CAPI_INCLUDES := ${CAPI_INCLUDES} ${EXTENSION_NAME}ClientCapi.H ${EXTENSION_NAME}Structs.H
INT_INCLUDES  := ${INT_INCLUDES} ecmdClientCapi.H  ecmdDataBuffer.H  ecmdReturnCodes.H ecmdStructs.H ecmdUtils.H ecmdClientEnums.H

ifeq ($(strip $(DISABLE_AUTOGEN)),)
  # These are the files that will be autogenerated from the template
  TEMPLATE_SOURCE := ${EXTENSION_NAME}ClientCapi.C ${EXTENSION_NAME}DllCapi.C

  # These are the files that are auto-gened with makedll.pl
  CAPI_SOURCE := ${CAPI_SOURCE} ${EXTENSION_NAME}ClientCapiFunc.C
  INCLUDES    := ${INCLUDES} ${EXTENSION_NAME}DllCapi.H ${EXTENSION_NAME}ClientEnums.H
endif

CFLAGS        := ${CFLAGS} -I../../../capi

# Variables used for the build
INCLUDES      := ${INCLUDES} ${CAPI_INCLUDES}

# This is the source generated by makedll.pl
ifeq ($(strip $(DISABLE_AUTOGEN)),)
  GENERATED_SOURCE := ${EXTENSION_NAME}ClientCapiFunc.C
  GENERATED_INCLUDES := ${EXTENSION_NAME}DllCapi.H ${EXTENSION_NAME}ClientEnums.H
endif 

# *****************************************************************************
# The Common Setup stuff
# *****************************************************************************
TARGET = ${EXTENSION_NAME}ClientCapi_${OS}.a
ifneq (${SLIB_SOURCE},)
  SLIB    := lib${EXTENSION_NAME}_${OS}.so
endif

# *****************************************************************************
# The x86 Linux Setup stuff
# *****************************************************************************
ifeq (${OS},x86)
  CFLAGS := ${CFLAGS} -ftemplate-depth-30 -Wall
endif

# *****************************************************************************
# The ppc Linux Setup stuff
# *****************************************************************************
ifeq (${OS},ppc)
  CFLAGS := ${CFLAGS} -ftemplate-depth-30 -Wall
endif

# *****************************************************************************
# The Aix Setup stuff
# *****************************************************************************
ifeq (${OS},aix)
  CFLAGS  := ${CFLAGS} -+ -qstaticinline -qnoinline
endif

VPATH := ${VPATH}:${OBJPATH}:../../../capi:../../template/capi


# *****************************************************************************
# The Main Targets
# *****************************************************************************
all: dir ${TARGET} ${SLIB} ${EXTENSION_NAME}DllCapi.C

clean: objclean
      ifeq ($(strip $(DISABLE_AUTOGEN)),)
	rm -f $(GENERATED_SOURCE)
	rm -f $(GENERATED_INCLUDES)
	rm -f $(TEMPLATE_SOURCE)
      endif

objclean:
	rm -rf ${OBJPATH}

install:
	@echo "Installing ${EXTENSION_NAME_u} eCMD Client Extension Api to ${INSTALL_PATH}/ext/${EXTENSION_NAME}/capi/ ..."
	@mkdir -p ${INSTALL_PATH}/ext/${EXTENSION_NAME}/capi/
	cp ${OBJPATH}/${TARGET} ${INSTALL_PATH}/ext/${EXTENSION_NAME}/capi/.
        ifneq (${SLIB},)
	  cp ${OBJPATH}/${SLIB} ${INSTALL_PATH}/ext/${EXTENSION_NAME}/capi/.
        endif
	cp ${CAPI_INCLUDES} ${INSTALL_PATH}/ext/${EXTENSION_NAME}/capi/.

dir:
	@mkdir -p ${OBJPATH}


# *****************************************************************************
# Object Build Targets
# *****************************************************************************
CAPI_SOURCE_OBJS  = $(basename $(CAPI_SOURCE))
CAPI_SOURCE_OBJS := $(addprefix ${OBJPATH}, $(CAPI_SOURCE_OBJS))
CAPI_SOURCE_OBJS := $(addsuffix .o, $(CAPI_SOURCE_OBJS))
SLIB_SOURCE_OBJS  = $(basename $(SLIB_SOURCE))
SLIB_SOURCE_OBJS := $(addprefix ${OBJPATH}, $(SLIB_SOURCE_OBJS))
SLIB_SOURCE_OBJS := $(addsuffix .o, $(SLIB_SOURCE_OBJS))

# *****************************************************************************
# Compile code for the common C++ objects if their respective
# code has been changed.  Or, compile everything if a header
# file has changed.
# *****************************************************************************
$(CAPI_SOURCE_OBJS): ${OBJPATH}%.o : %.C ${INCLUDES} ${INT_INCLUDES}
	$(CC) -c $(CFLAGS) $< -o $@ $(DEFINES)
$(SLIB_SOURCE_OBJS): ${OBJPATH}%.o : %.C ${INCLUDES} ${INT_INCLUDES}
	$(CC) -c $(CFLAGS) $(SLIBCFLAGS) $< -o $@ $(DEFINES)


# *****************************************************************************
# Create the Client Archive
# *****************************************************************************
${TARGET}: ${CAPI_SOURCE_OBJS} ${LINK_OBJS}
	${AR} r ${OBJPATH}${TARGET} $^

# *****************************************************************************
# Create the Shared Library
# *****************************************************************************
${SLIB}: ${SLIB_SOURCE_OBJS}
	@echo "Linking Shared Library ..."
	$(LD) ${SLDFLAGS} -o ${OBJPATH}${SLIB} $^

# *****************************************************************************
# Autogenerate the Client side of the Dll
# *****************************************************************************
ifeq ($(strip $(DISABLE_AUTOGEN)),)
  $(GENERATED_SOURCE) $(GENERATED_INCLUDES): ${EXTENSION_NAME}ClientCapi.H ${ECMD_ROOT}/capi/makedll.pl
	@echo "==== Auto Generating $@"
	@${ECMD_ROOT}/capi/makedll.pl ${EXTENSION_NAME} $@
endif


# *****************************************************************************
# Template source files
# *****************************************************************************
ifeq ($(strip $(DISABLE_AUTOGEN)),)
  ${TEMPLATE_SOURCE}: ${EXTENSION_NAME}% : template%
	@echo "==== Auto Generating $@"
	@sed "s/template/${EXTENSION_NAME}/g" $< | sed "s/TEMPLATE/${EXTENSION_NAME_u}/g" | sed "s/Template/${EXTENSION_NAME_u1}/g" > $@
else
  ${EXTENSION_NAME}DllCapi.C:
	@echo "This is a phony, don't need this if we are not auto-genning" > /dev/null
	@touch ${EXTENSION_NAME}DllCapi.C
endif

# *****************************************************************************
# Debug rule for any makefile testing 
# *****************************************************************************
debug:
	@echo ${ECMD_ROOT}
	@echo ${SUBDIR}
