# Makefile for the ecmd Extensions
# Written by Chris Engel

# $Header$



EXTENSION_NAME_u := $(shell echo ${EXTENSION_NAME} | tr 'a-z' 'A-Z')
EXTENSION_NAME_u1 := $(shell perl -e 'printf(ucfirst(${EXTENSION_NAME}))')

OS           := $(shell uname)
SITE         := $(shell fs wscell | cut -d\' -f2)

INCLUDES     := ${EXTENSION_NAME}ClientCapi.H ${EXTENSION_NAME}Structs.H
INT_INCLUDES := ecmdClientCapi.H  ecmdDataBuffer.H  ecmdReturnCodes.H ecmdStructs.H ecmdUtils.H ecmdClientEnums.H

ifeq ($(strip $(DISABLE_AUTOGEN)),)
  # These are the files that will be autogenerated from the template
  TEMPLATE_SOURCE := ${EXTENSION_NAME}ClientCapi.C ${EXTENSION_NAME}DllCapi.C

  # These are the files that are auto-gened with makedll.pl
  AUTOGEN_SOURCE  := ${EXTENSION_NAME}ClientCapiFunc.C

  INCLUDES     := ${INCLUDES} ${EXTENSION_NAME}DllCapi.H
endif

DEFINES      := 
CFLAGS       := ${CFLAGS} -I. -I../../../capi/export -g

SOURCE       := ${SOURCE} ${EXTENSION_NAME}ClientCapi.C ${AUTOGEN_SOURCE}



# *****************************************************************************
# The Linux Setup stuff
# *****************************************************************************
ifeq (${OS},Linux)
  SUBDIR   := linux/
  CC := g++
  TARGET = ${EXTENSION_NAME}ClientCapi_x86.a
  CFLAGS := ${CFLAGS} -ftemplate-depth-30 -Wall
  GPATH   := ${SUBDIR}
endif

# *****************************************************************************
# The Aix Setup stuff
# *****************************************************************************
ifeq (${OS},AIX)
  SUBDIR  := aix/
# Pick the compiler, for Rochester,Austin,Pok you can use a local compiler which is 6.0.0.8, all other sites must run remote from rochester
  CC      := /afs/rchland.ibm.com/rs_aix51/lpp/vacpp.6008/usr/vacpp/bin/xlC.6008
  ifeq (${SITE},apd.pok.ibm.com)
    CC      := xlC
  endif
  ifeq (${SITE},awd.austin.ibm.com)
    CC      := xlC
  endif

  TARGET = ${EXTENSION_NAME}ClientCapi_aix.a
  CFLAGS  := ${CFLAGS} -+ -qstaticinline -qnoinline
endif

VPATH := ${VPATH}${SUBDIR}:../../../capi/export:../../template/capi


# *****************************************************************************
# The Main Targets
# *****************************************************************************
all: dir ${TARGET} ${EXTENSION_NAME}DllCapi.C
	@touch t.o t.a
	@mv *.o *.a ${SUBDIR}
	@rm ${SUBDIR}/t.o ${SUBDIR}/t.a
	@echo "Exporting ${EXTENSION_NAME_u} eCMD Client Extension Api to export/ ..."
	@cp -p ${SUBDIR}${TARGET} export/
	@cp -p ${INCLUDES} export/

clean:
	rm -rf ${SUBDIR}
	rm -f ${EXTENSION_NAME}ClientCapiFunc.C
ifeq ($(strip $(DISABLE_AUTOGEN)),)
	rm -f ${EXTENSION_NAME}ClientCapi.C
endif
	rm -f ${EXTENSION_NAME}ClientEnums.H

dir:
	@mkdir -p ${SUBDIR}
	@mkdir -p export



# *****************************************************************************
# Object Build Targets
# *****************************************************************************
SOURCE_OBJS  = $(basename $(SOURCE))
SOURCE_OBJS := $(addsuffix .o, $(SOURCE_OBJS))

# *****************************************************************************
# Compile code for the common C++ objects if their respective
# code has been changed.  Or, compile everything if a header
# file has changed.
# *****************************************************************************
$(SOURCE_OBJS): %.o : %.C ${INCLUDES} ${INT_INCLUDES}
	$(CC) -c $(CFLAGS) $< -o $@ $(DEFINES)


# *****************************************************************************
# Create the Client Archive
# *****************************************************************************
${TARGET}: ${SOURCE_OBJS} ${LINK_OBJS}
	ar r $@ $^



# *****************************************************************************
# Autogenerate the Client side of the Dll
# *****************************************************************************
ifeq ($(strip $(DISABLE_AUTOGEN)),)
  ${EXTENSION_NAME}ClientCapiFunc.C ${EXTENSION_NAME}DllCapi.H ${EXTENSION_NAME}ClientEnums.H: ${EXTENSION_NAME}ClientCapi.H makedll.pl 
	@echo "==== Auto Generate Client Functions"
	@chmod 777 makedll.pl
	./makedll.pl ${EXTENSION_NAME}
endif


# *****************************************************************************
# Template source files
# *****************************************************************************
ifeq ($(strip $(DISABLE_AUTOGEN)),)
  ${TEMPLATE_SOURCE}: ${EXTENSION_NAME}% : template%
	@echo "Generating $@ ..."
	@sed "s/template/${EXTENSION_NAME}/g" $< | sed "s/TEMPLATE/${EXTENSION_NAME_u}/g" | sed "s/Template/${EXTENSION_NAME_u1}/g" > $@
else
  ${EXTENSION_NAME}DllCapi.C:
	@echo "This is a phony, don't need this if we are not auto-genning" > /dev/null
	@touch ${EXTENSION_NAME}DllCapi.C
endif
