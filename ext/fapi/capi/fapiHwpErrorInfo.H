// fapiHwpErrorInfo.H
// This file is generated by perl script fapiParseErrorInfo.pl

#ifndef FAPIHWPERRORINFO_H_
#define FAPIHWPERRORINFO_H_

/**
 * @brief Error Information macros
 */
#define IO_RUN_TRAINING_INVALID_ARGS_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_INVALID_ARGS_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_INVALID_ARGS_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_INTERNAL_ERR_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_INTERNAL_ERR_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_INTERNAL_ERR_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_ERR_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_ERR_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_ERR_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_WIRETEST_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_WIRETEST_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_WIRETEST_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_DESKEW_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_DESKEW_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_DESKEW_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_EYE_OPT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_EYE_OPT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_EYE_OPT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_REPAIR_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_REPAIR_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_REPAIR_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_FUNC_MODE_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_FUNC_MODE_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_FUNC_MODE_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_WIRETEST_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_WIRETEST_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_WIRETEST_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_DESKEW_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_DESKEW_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_DESKEW_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_EYE_OPT_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_EYE_OPT_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_EYE_OPT_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_REPAIR_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_REPAIR_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_REPAIR_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FUNC_MODE_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FUNC_MODE_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FUNC_MODE_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_GCR_WRITE_MISMATCH_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_GCR_WRITE_MISMATCH_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_GCR_WRITE_MISMATCH_RC_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&READ_BUF, &WRITE_BUF}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(READ_BUF)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(WRITE_BUF)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_ADU_COHERENT_UTILS_INVALID_ARGS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_INVALID_ARGS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_INVALID_ARGS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&START_ADDRESS, &END_ADDRESS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(START_ADDRESS)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(END_ADDRESS)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_ADU_COHERENT_UTILS_FBC_INIT_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_FBC_INIT_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_FBC_INIT_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_ADU_COHERENT_UTILS_FBC_STOPPED_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_FBC_STOPPED_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_FBC_STOPPED_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_ADU_COHERENT_UTILS_STATUS_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_STATUS_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_STATUS_MISMATCH_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&STATUS_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_ADU_UTILS_INVALID_ARGS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_ADU_UTILS_INVALID_ARGS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_ADU_UTILS_INVALID_ARGS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ARGS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ARGS)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_ADU_UTILS_INTERNAL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_ADU_UTILS_INTERNAL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_ADU_UTILS_INTERNAL_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ERR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define FAPI_RC_PLAT_ERR_ADU_LOCKED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define FAPI_RC_PLAT_ERR_ADU_LOCKED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define FAPI_RC_PLAT_ERR_ADU_LOCKED_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_INVALID_ARGS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_INVALID_ARGS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_INVALID_ARGS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ARGS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ARGS)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FL_P8_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_P8_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_P8_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FAIL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FAIL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FAIL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FL_P8_FAIL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_P8_FAIL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_P8_FAIL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FL_TIMEOUT_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_TIMEOUT_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_TIMEOUT_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FAIL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FAIL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FAIL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FAIL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FAIL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FAIL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FRTL_TIMEOUT_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_TIMEOUT_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_TIMEOUT_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_SPCWKUP_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_SPCWKUP_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_SPCWKUP_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_SPCWKUP_CODE_BAD_ENTITY_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_SPCWKUP_CODE_BAD_ENTITY_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_SPCWKUP_CODE_BAD_ENTITY_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_SPCWKUP_CODE_BAD_OP_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_SPCWKUP_CODE_BAD_OP_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_SPCWKUP_CODE_BAD_OP_ADD_ERROR_INFO(RC) 

#define RC_PROC_FAB_SMP_INVALID_PROC_FAB_SMP_PROC_CHIP_ARG_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_FAB_SMP_INVALID_PROC_FAB_SMP_PROC_CHIP_ARG_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_FAB_SMP_INVALID_PROC_FAB_SMP_PROC_CHIP_ARG_ADD_ERROR_INFO(RC) 

#define RC_PROC_FAB_SMP_INVALID_PROC_FAB_SMP_A_BUS_ARG_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_FAB_SMP_INVALID_PROC_FAB_SMP_A_BUS_ARG_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_FAB_SMP_INVALID_PROC_FAB_SMP_A_BUS_ARG_ADD_ERROR_INFO(RC) 

#define RC_PROC_FAB_SMP_INVALID_PROC_FAB_SMP_X_BUS_ARG_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_FAB_SMP_INVALID_PROC_FAB_SMP_X_BUS_ARG_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_FAB_SMP_INVALID_PROC_FAB_SMP_X_BUS_ARG_ADD_ERROR_INFO(RC) 

#define RC_PROC_GETTRACEARRAY_INVALID_ARGS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_GETTRACEARRAY_INVALID_ARGS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_GETTRACEARRAY_INVALID_ARGS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ARGS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ARGS)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_GETTRACEARRAY_INTERNAL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_GETTRACEARRAY_INTERNAL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_GETTRACEARRAY_INTERNAL_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ERR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_L2_FLUSH_CMD_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_L2_FLUSH_CMD_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_l2_ffdc, EX_CHIPLET_IN_ERROR, RC); }
#define RC_PROC_L2_FLUSH_CMD_TIMEOUT_RC_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&CMD_REG_ADDR, &CMD_REG, &NUMBER_OF_ATTEMPTS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CMD_REG_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CMD_REG)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(NUMBER_OF_ATTEMPTS)}}; RC.addErrorInfo(l_objects, l_entries, 3);}

#define RC_PROC_L2_FLUSH_CMD_ERROR_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_L2_FLUSH_CMD_ERROR_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_l2_ffdc, EX_CHIPLET_IN_ERROR, RC); }
#define RC_PROC_L2_FLUSH_CMD_ERROR_RC_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&CMD_REG_ADDR, &CMD_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CMD_REG_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CMD_REG)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_L2_FLUSH_UNKNOWN_PLATFORM_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_L2_FLUSH_UNKNOWN_PLATFORM_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_L2_FLUSH_UNKNOWN_PLATFORM_RC_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&PLATFORM}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(PLATFORM)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROCPM_OCB_ACCESS_PUT_SCOM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_ACCESS_PUT_SCOM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_ACCESS_PUT_SCOM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_ACCESS_GET_SCOM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_ACCESS_GET_SCOM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_ACCESS_GET_SCOM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_ACCESS_LENGTH_CHECK_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_ACCESS_LENGTH_CHECK_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_ACCESS_LENGTH_CHECK_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_ACCESS_CHANNEL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_ACCESS_CHANNEL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_ACCESS_CHANNEL_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_ACCESS_OP_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_ACCESS_OP_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_ACCESS_OP_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_PUT_DATA_LENGTH_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_PUT_DATA_LENGTH_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_PUT_DATA_LENGTH_ERROR_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_ACCESS_GET_BUFFER_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_ACCESS_GET_BUFFER_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_ACCESS_GET_BUFFER_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_INDIR_SETUP_CIRCULAR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_INDIR_SETUP_CIRCULAR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_INDIR_SETUP_CIRCULAR_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_INDIR_SETUP_CIRCULAR_TEST_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_INDIR_SETUP_CIRCULAR_TEST_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_INDIR_SETUP_CIRCULAR_TEST_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_INDIR_SETUP_LINEAR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_INDIR_SETUP_LINEAR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_INDIR_SETUP_LINEAR_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_INDIR_SETUP_LINEAR_TEST_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_INDIR_SETUP_LINEAR_TEST_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_INDIR_SETUP_LINEAR_TEST_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCBINIT_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCBINIT_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCBINIT_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCBINIT_BAD_PARM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCBINIT_BAD_PARM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCBINIT_BAD_PARM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCBINIT_TEST_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCBINIT_TEST_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCBINIT_TEST_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_CONTROL_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_CONTROL_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_CONTROL_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_CONTROL_BAD_PARM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_CONTROL_BAD_PARM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_CONTROL_BAD_PARM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_CONTROL_TEST_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_CONTROL_TEST_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_CONTROL_TEST_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_CONTROL_PUTSCOM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_CONTROL_PUTSCOM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_CONTROL_PUTSCOM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_LOAD_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_LOAD_BAD_PARM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_PARM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_PARM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_LOAD_BAD_CHANNEL_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_CHANNEL_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_CHANNEL_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_LOAD_BAD_BINARY_FILE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_BINARY_FILE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_BINARY_FILE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_LOAD_TEST_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_LOAD_TEST_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_LOAD_TEST_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCCSRAM_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCCSRAM_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCCSRAM_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCCSRAM_TEST_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCCSRAM_TEST_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCCSRAM_TEST_ADD_ERROR_INFO(RC) 

#define RC_PROC_OHA_CODE_PUTGETSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_OHA_CODE_PUTGETSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_OHA_CODE_PUTGETSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_OHA_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_OHA_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_OHA_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROC_OHA_CODE_BITOP_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_OHA_CODE_BITOP_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_OHA_CODE_BITOP_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_BAR_INDEX_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_BAR_INDEX_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_BAR_INDEX_OUT_OF_RANGE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_BAR_SCOPE_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_BAR_SCOPE_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_BAR_SCOPE_OUT_OF_RANGE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_BAR_MASK_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_BAR_MASK_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_BAR_MASK_OUT_OF_RANGE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_BAR_MODE_NOT_SUPPORTED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_BAR_MODE_NOT_SUPPORTED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_BAR_MODE_NOT_SUPPORTED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_BAR_PUTSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_BAR_PUTSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_BAR_PUTSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_COHERENT_UTILS_INVALID_ARGS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_INVALID_ARGS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_INVALID_ARGS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&START_ADDRESS, &END_ADDRESS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(START_ADDRESS)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(END_ADDRESS)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_PBA_COHERENT_UTILS_FBC_INIT_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_FBC_INIT_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_FBC_INIT_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_COHERENT_UTILS_FBC_STOPPED_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_FBC_STOPPED_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_FBC_STOPPED_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_COHERENT_UTILS_PBA_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_PBA_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_PBA_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ERRPT0_DATA, &ERRPT1_DATA, &ERRPT2_DATA, &FIR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERRPT0_DATA)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERRPT1_DATA)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERRPT2_DATA)}, {fapi::ReturnCode::EI_TYPE_FFDC, 3, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 4);}

#define RC_PROC_PBA_COHERENT_UTILS_PBA_READ_STATUS_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_PBA_READ_STATUS_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_PBA_READ_STATUS_MISMATCH_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&STATUS2_DATA, &STATUS3_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS2_DATA)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS3_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_PBA_COHERENT_UTILS_PBA_WRITE_STATUS_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_PBA_WRITE_STATUS_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_PBA_WRITE_STATUS_MISMATCH_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&STATUS0_DATA, &STATUS1_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS0_DATA)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS1_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_PBA_COHERENT_UTILS_OCB_STATUS_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_OCB_STATUS_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_OCB_STATUS_MISMATCH_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&STATUS_DATA, &ERR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS_DATA)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_PBA_INIT_INCORRECTMODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_INIT_INCORRECTMODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_INIT_INCORRECTMODE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_INIT_SCOPE_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_INIT_SCOPE_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_INIT_SCOPE_OUT_OF_RANGE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_INIT_MASK_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_INIT_MASK_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_INIT_MASK_OUT_OF_RANGE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_INIT_MODE_NOT_SUPPORTED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_INIT_MODE_NOT_SUPPORTED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_INIT_MODE_NOT_SUPPORTED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_INIT_PUTSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_INIT_PUTSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_INIT_PUTSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_UTILS_BAD_PBA_REGION_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_UTILS_BAD_PBA_REGION_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_UTILS_BAD_PBA_REGION_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ERR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_PBA_UTILS_PBA_SLAVE_RESET_FAIL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_UTILS_PBA_SLAVE_RESET_FAIL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_UTILS_PBA_SLAVE_RESET_FAIL_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ERR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_PBA_UTILS_INVALID_ARGS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_UTILS_INVALID_ARGS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_UTILS_INVALID_ARGS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ARGS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ARGS)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_PBAXCFG_INIT_GETSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBAXCFG_INIT_GETSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBAXCFG_INIT_GETSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBAXCFG_INIT_PUTSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBAXCFG_INIT_PUTSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBAXCFG_INIT_PUTSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBAXCFG_INIT_INCORRECTMODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBAXCFG_INIT_INCORRECTMODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBAXCFG_INIT_INCORRECTMODE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_CODE_SAFE_FSM_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_CODE_SAFE_FSM_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_CODE_SAFE_FSM_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_CODE_PUTGETSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_CODE_PUTGETSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_CODE_PUTGETSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_CODE_BITOP_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_CODE_BITOP_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_CODE_BITOP_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_RESCLK_CODE_PUTGETSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_PUTGETSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_PUTGETSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_RESCLK_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_RESCLK_CODE_BITOP_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_BITOP_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_BITOP_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_OCC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OCC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OCC_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_CPU_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_CPU_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_CPU_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_PMC_FORCE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PMC_FORCE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PMC_FORCE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_PCBS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PCBS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PCBS_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_PMC_INIT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PMC_INIT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PMC_INIT_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_PORESW_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PORESW_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PORESW_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_POREGPE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_POREGPE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_POREGPE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_OHA_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OHA_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OHA_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_PBA_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PBA_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PBA_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_OCC_SRAM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OCC_SRAM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OCC_SRAM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_OCB_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OCB_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OCB_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PMC_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PMC_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PMC_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PMC_TEST_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PMC_TEST_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PMC_TEST_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_GPE0_RESET_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_GPE0_RESET_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_GPE0_RESET_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_GPE1_RESET_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_GPE1_RESET_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_GPE1_RESET_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_GPE_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_GPE_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_GPE_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_GPE_BAD_ENGINE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_GPE_BAD_ENGINE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_GPE_BAD_ENGINE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PORESLW_CODE_BAD_TBA_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PORESLW_CODE_BAD_TBA_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PORESLW_CODE_BAD_TBA_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PORESLW_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PORESLW_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PORESLW_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PSS_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PSS_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PSS_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PSS_WRONG_DEVICE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PSS_WRONG_DEVICE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PSS_WRONG_DEVICE_ADD_ERROR_INFO(RC) 

#define RC_PROC_SLWB_INTERNAL_IMAGE_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_INTERNAL_IMAGE_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_INTERNAL_IMAGE_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_SLWB_IMAGE_SIZE_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_IMAGE_SIZE_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_IMAGE_SIZE_MISMATCH_ADD_ERROR_INFO(RC) 

#define RC_PROC_START_CLOCKS_CHIPLETS_CLK_STATUS_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_START_CLOCKS_CHIPLETS_CLK_STATUS_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_START_CLOCKS_CHIPLETS_CLK_STATUS_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&STATUS_REG, &CHIPLET_BASE_SCOM_ADDR}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS_REG)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CHIPLET_BASE_SCOM_ADDR)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_START_CLOCKS_CHIPLETS_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_START_CLOCKS_CHIPLETS_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_START_CLOCKS_CHIPLETS_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG, &CHIPLET_BASE_SCOM_ADDR}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CHIPLET_BASE_SCOM_ADDR)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_START_SBE_FAILED_TO_START_SBE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_START_SBE_FAILED_TO_START_SBE_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_sbe_ffdc, CHIP_IN_ERROR, RC); }
#define RC_PROC_START_SBE_FAILED_TO_START_SBE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SBE_VITAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SBE_VITAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_START_SBE_FAKE_ERROR_TO_GET_AROUND_COMPILER_BUG_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_START_SBE_FAKE_ERROR_TO_GET_AROUND_COMPILER_BUG_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_sbe_ffdc, CHIP_IN_ERROR, RC); }
#define RC_PROC_START_SBE_FAKE_ERROR_TO_GET_AROUND_COMPILER_BUG_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SBE_VITAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SBE_VITAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_SBE_SUCCESS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SUCCESS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SUCCESS_ADD_ERROR_INFO(RC) 

#define RC_SBE_PROC_ENTRY_HALT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PROC_ENTRY_HALT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PROC_ENTRY_HALT_ADD_ERROR_INFO(RC) 

#define RC_SBE_PROC_EXIT_HALT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PROC_EXIT_HALT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PROC_EXIT_HALT_ADD_ERROR_INFO(RC) 

#define RC_SBE_PROC_CHECKSTOP_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PROC_CHECKSTOP_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PROC_CHECKSTOP_ADD_ERROR_INFO(RC) 

#define RC_SBE_PROC_RECOVERABLE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PROC_RECOVERABLE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PROC_RECOVERABLE_ADD_ERROR_INFO(RC) 

#define RC_SBE_PROC_SPATTN_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PROC_SPATTN_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PROC_SPATTN_ADD_ERROR_INFO(RC) 

#define RC_SBE_PORE_ERROR0_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PORE_ERROR0_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PORE_ERROR0_ADD_ERROR_INFO(RC) 

#define RC_SBE_PORE_ERROR1_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PORE_ERROR1_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PORE_ERROR1_ADD_ERROR_INFO(RC) 

#define RC_SBE_PORE_ERROR2_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PORE_ERROR2_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PORE_ERROR2_ADD_ERROR_INFO(RC) 

#define RC_SBE_PORE_ERROR3_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PORE_ERROR3_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PORE_ERROR3_ADD_ERROR_INFO(RC) 

#define RC_SBE_PORE_ERROR4_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PORE_ERROR4_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PORE_ERROR4_ADD_ERROR_INFO(RC) 

#define RC_SBE_SCAN_MAGIC_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SCAN_MAGIC_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SCAN_MAGIC_MISMATCH_ADD_ERROR_INFO(RC) 

#define RC_SBE_SCAN_HEADER_VERSION_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SCAN_HEADER_VERSION_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SCAN_HEADER_VERSION_ERROR_ADD_ERROR_INFO(RC) 

#define RC_SBE_SCAN_DATA_SIZE_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SCAN_DATA_SIZE_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SCAN_DATA_SIZE_ERROR_ADD_ERROR_INFO(RC) 

#define RC_SBE_SCAN_RING_LENGTH_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SCAN_RING_LENGTH_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SCAN_RING_LENGTH_ERROR_ADD_ERROR_INFO(RC) 

#define RC_SBE_SCAN_POLLING_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SCAN_POLLING_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SCAN_POLLING_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_SBE_SCAN_CHECKWORD_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SCAN_CHECKWORD_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SCAN_CHECKWORD_ERROR_ADD_ERROR_INFO(RC) 

#define RC_SBE_PIBMEM_PRE_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PIBMEM_PRE_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PIBMEM_PRE_ERROR_ADD_ERROR_INFO(RC) 

#define RC_SBE_PIBMEM_POST_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PIBMEM_POST_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PIBMEM_POST_ERROR_ADD_ERROR_INFO(RC) 

#define RC_SBE_PIBMEM_IMAGE_SIZE_ALIGNMENT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PIBMEM_IMAGE_SIZE_ALIGNMENT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PIBMEM_IMAGE_SIZE_ALIGNMENT_ADD_ERROR_INFO(RC) 

#define RC_SBE_PIBMEM_LOAD_ADDRESS_ALIGNMENT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PIBMEM_LOAD_ADDRESS_ALIGNMENT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PIBMEM_LOAD_ADDRESS_ALIGNMENT_ADD_ERROR_INFO(RC) 

#define RC_SBE_PIBMEM_OVERFLOW_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PIBMEM_OVERFLOW_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PIBMEM_OVERFLOW_ADD_ERROR_INFO(RC) 

#define RC_MSS_RCD_PARITY_ERROR_PORT0_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_RCD_PARITY_ERROR_PORT0_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_RCD_PARITY_ERROR_PORT0_ADD_ERROR_INFO(RC) 

#define RC_MSS_RCD_PARITY_ERROR_PORT1_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_RCD_PARITY_ERROR_PORT1_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_RCD_PARITY_ERROR_PORT1_ADD_ERROR_INFO(RC) 

#define RC_MSS_RCD_PARITY_ERROR_LIMIT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_RCD_PARITY_ERROR_LIMIT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_RCD_PARITY_ERROR_LIMIT_ADD_ERROR_INFO(RC) 

#define RC_MSS_CCS_HUNG_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_CCS_HUNG_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_CCS_HUNG_ADD_ERROR_INFO(RC) 

#define RC_MSS_CCS_READ_MISCOMPARE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_CCS_READ_MISCOMPARE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_CCS_READ_MISCOMPARE_ADD_ERROR_INFO(RC) 

#define RC_MSS_CCS_UE_SUE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_CCS_UE_SUE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_CCS_UE_SUE_ADD_ERROR_INFO(RC) 

#define RC_MSS_CCS_CAL_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_CCS_CAL_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_CCS_CAL_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_MSS_PLACE_HOLDER_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_PLACE_HOLDER_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_PLACE_HOLDER_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_EFF_CONFIG_RANK_GROUP_RC_ERROR_001A_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_EFF_CONFIG_RANK_GROUP_RC_ERROR_001A_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_EFF_CONFIG_RANK_GROUP_RC_ERROR_001A_ADD_ERROR_INFO(RC) 

#define RC_MSS_EFF_CONFIG_RC_ERROR_001A_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_EFF_CONFIG_RC_ERROR_001A_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_EFF_CONFIG_RC_ERROR_001A_ADD_ERROR_INFO(RC) 

#define RC_MSS_UNEXPECTED_MEM_CLK_STATUS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_UNEXPECTED_MEM_CLK_STATUS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_UNEXPECTED_MEM_CLK_STATUS_ADD_ERROR_INFO(RC) 

#define RC_MSS_UNEXPECTED_NEST_CLK_STATUS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_UNEXPECTED_NEST_CLK_STATUS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_UNEXPECTED_NEST_CLK_STATUS_ADD_ERROR_INFO(RC) 

#define RC_MSS_INIT1_OPCG_DONE_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_INIT1_OPCG_DONE_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_INIT1_OPCG_DONE_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_INIT1_FSISTATUS_FAIL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_INIT1_FSISTATUS_FAIL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_INIT1_FSISTATUS_FAIL_ADD_ERROR_INFO(RC) 

#define RC_MSS_PLL_LOCK_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_PLL_LOCK_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_PLL_LOCK_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_MSS_THOLD_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_THOLD_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_THOLD_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_CCREG_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_CCREG_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_CCREG_MISMATCH_ADD_ERROR_INFO(RC) 

#define RC_MSS_ARRAY_REPAIR_BUSY_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_ARRAY_REPAIR_BUSY_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_ARRAY_REPAIR_BUSY_ADD_ERROR_INFO(RC) 

#define RC_MSS_ARRAY_REPAIR_NOT_DONE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_ARRAY_REPAIR_NOT_DONE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_ARRAY_REPAIR_NOT_DONE_ADD_ERROR_INFO(RC) 

#define RC_MSS_ECC_TRAP_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_ECC_TRAP_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_ECC_TRAP_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_DP18_0_PLL_FAILED_TO_LOCK_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_DP18_0_PLL_FAILED_TO_LOCK_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_DP18_0_PLL_FAILED_TO_LOCK_ADD_ERROR_INFO(RC) 

#define RC_MSS_DP18_1_PLL_FAILED_TO_LOCK_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_DP18_1_PLL_FAILED_TO_LOCK_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_DP18_1_PLL_FAILED_TO_LOCK_ADD_ERROR_INFO(RC) 

#define RC_MSS_AD32S_0_PLL_FAILED_TO_LOCK_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_AD32S_0_PLL_FAILED_TO_LOCK_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_AD32S_0_PLL_FAILED_TO_LOCK_ADD_ERROR_INFO(RC) 

#define RC_MSS_AD32S_1_PLL_FAILED_TO_LOCK_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_AD32S_1_PLL_FAILED_TO_LOCK_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_AD32S_1_PLL_FAILED_TO_LOCK_ADD_ERROR_INFO(RC) 

#define RC_MSS_GENERAL_PUTSCOM_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_GENERAL_PUTSCOM_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_GENERAL_PUTSCOM_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_GENERAL_GETSCOM_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_GENERAL_GETSCOM_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_GENERAL_GETSCOM_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_UNEXPECTED_CLOCK_STATUS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_UNEXPECTED_CLOCK_STATUS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_UNEXPECTED_CLOCK_STATUS_ADD_ERROR_INFO(RC) 

#define RC_MSS_UNEXPECTED_FIR_STATUS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_UNEXPECTED_FIR_STATUS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_UNEXPECTED_FIR_STATUS_ADD_ERROR_INFO(RC) 

#define RC_MSS_INIT_CAL_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_INIT_CAL_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_INIT_CAL_FAILED_ADD_ERROR_INFO(RC) 

#define RC_MSS_VOLT_UNRECOGNIZED_DRAM_DEVICE_TYPE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_VOLT_UNRECOGNIZED_DRAM_DEVICE_TYPE_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, y, DEVICE_TYPE    , RC); }
#define RC_MSS_VOLT_UNRECOGNIZED_DRAM_DEVICE_TYPE_ADD_ERROR_INFO(RC) 

#define RC_MSS_VOLT_DDR_TYPE_MIXING_UNSUPPORTED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_VOLT_DDR_TYPE_MIXING_UNSUPPORTED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_VOLT_DDR_TYPE_MIXING_UNSUPPORTED_ADD_ERROR_INFO(RC) 

#define RC_MSS_VOLT_DDR_TYPE_REQUIRED_VOLTAGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_VOLT_DDR_TYPE_REQUIRED_VOLTAGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_VOLT_DDR_TYPE_REQUIRED_VOLTAGE_ADD_ERROR_INFO(RC) 

#define RC_MSS_GENERAL_SIMSTKFAC_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_GENERAL_SIMSTKFAC_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_GENERAL_SIMSTKFAC_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_GET_FAPI_ATTRIBUTE_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_GET_FAPI_ATTRIBUTE_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_GET_FAPI_ATTRIBUTE_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_GET_SIM_HIERARCHY_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_GET_SIM_HIERARCHY_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_GET_SIM_HIERARCHY_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_UNSUPPORTED_FREQ_CALCULATED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_UNSUPPORTED_FREQ_CALCULATED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_UNSUPPORTED_FREQ_CALCULATED_ADD_ERROR_INFO(RC) 

#define RC_TEST_ERROR_A_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_TEST_ERROR_A_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, hwpTestFfdc1, MASTER_CHIP, RC); }
#define RC_TEST_ERROR_A_ADD_ERROR_INFO(RC) fapi::fapiCheckType<const fapi::Target *>(&MASTER_CHIP); fapi::fapiCheckType<const fapi::Target *>(&MASTER_CHIP); fapi::fapiCheckType<const fapi::Target *>(&MASTER_CHIP); {const void * l_objects[] = {&FFDC_DATA_1, &FFDC_DATA_BUF, &MASTER_CHIP}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DATA_1)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DATA_BUF)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(MASTER_CHIP)}, {fapi::ReturnCode::EI_TYPE_CALLOUT, 2, fapi::PRI_HIGH}, {fapi::ReturnCode::EI_TYPE_DECONF, 2}, {fapi::ReturnCode::EI_TYPE_GARD, 2}}; RC.addErrorInfo(l_objects, l_entries, 6);}

#define RC_TEST_ERROR_B_CALL_FUNC_TO_ANALYZE_ERROR(RC) FAPI_EXEC_HWP(RC, hwpTestAnalyzeError, MASTER_CHIP)
#define RC_TEST_ERROR_B_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_TEST_ERROR_B_ADD_ERROR_INFO(RC) 

#define RC_TEST_CONFIG_NO_MCS_CHIPLETS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_TEST_CONFIG_NO_MCS_CHIPLETS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_TEST_CONFIG_NO_MCS_CHIPLETS_ADD_ERROR_INFO(RC) 

#define RC_TEST_CONFIG_PARENT_CHIP_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_TEST_CONFIG_PARENT_CHIP_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_TEST_CONFIG_PARENT_CHIP_MISMATCH_ADD_ERROR_INFO(RC) 

#define RC_TEST_DQ_NO_ERR_ON_BAD_PARAMS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_TEST_DQ_NO_ERR_ON_BAD_PARAMS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_TEST_DQ_NO_ERR_ON_BAD_PARAMS_ADD_ERROR_INFO(RC) 

#define RC_TEST_DQ_BAD_DATA_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_TEST_DQ_BAD_DATA_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_TEST_DQ_BAD_DATA_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_DATA1, &FFDC_DATA2}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DATA1)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DATA2)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_INITFILE_INCORRECT_VER_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_INITFILE_INCORRECT_VER_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_INITFILE_INCORRECT_VER_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_IF_VER}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_IF_VER)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_INITFILE_ATTR_ID_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_INITFILE_ATTR_ID_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_INITFILE_ATTR_ID_OUT_OF_RANGE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_IF_ATTR_ID_OUT_OF_RANGE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_IF_ATTR_ID_OUT_OF_RANGE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_INITFILE_LIT_ID_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_INITFILE_LIT_ID_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_INITFILE_LIT_ID_OUT_OF_RANGE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_IF_LIT_ID_OUT_OF_RANGE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_IF_LIT_ID_OUT_OF_RANGE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_HWP_EXEC_INITFILE_TEST_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_HWP_EXEC_INITFILE_TEST_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_HWP_EXEC_INITFILE_TEST_FAILED_ADD_ERROR_INFO(RC) 

#define RC_HWP_ATTR_UNIT_TEST_FAIL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_HWP_ATTR_UNIT_TEST_FAIL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_HWP_ATTR_UNIT_TEST_FAIL_ADD_ERROR_INFO(RC) 

#define RC_BAD_DQ_DIMM_BAD_PARAM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_BAD_DQ_DIMM_BAD_PARAM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_BAD_DQ_DIMM_BAD_PARAM_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_PORT, &FFDC_DIMM, &FFDC_RANK}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_PORT)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DIMM)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_RANK)}}; RC.addErrorInfo(l_objects, l_entries, 3);}

#define RC_BAD_DQ_DIMM_NOT_FOUND_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_BAD_DQ_DIMM_NOT_FOUND_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_BAD_DQ_DIMM_NOT_FOUND_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_MBA_TARGET, &FFDC_PORT, &FFDC_DIMM}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_MBA_TARGET)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_PORT)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DIMM)}}; RC.addErrorInfo(l_objects, l_entries, 3);}



#endif
