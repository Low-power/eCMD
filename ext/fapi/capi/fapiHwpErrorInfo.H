// fapiHwpErrorInfo.H
// This file is generated by perl script fapiParseErrorInfo.pl

#ifndef FAPIHWPERRORINFO_H_
#define FAPIHWPERRORINFO_H_

/**
 * @brief Error Information macros
 */
#define RC_TEST_ERROR_A_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_TEST_ERROR_A_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, hwpTestFfdc1, MASTER_CHIP, RC); }
#define RC_TEST_ERROR_A_ADD_ERROR_INFO(RC) fapi::fapiCheckType<const fapi::Target *>(&MASTER_CHIP); fapi::fapiCheckType<const fapi::Target *>(&MASTER_CHIP); fapi::fapiCheckType<const fapi::Target *>(&MASTER_CHIP); {const void * l_objects[] = {&FFDC_DATA_1, &FFDC_DATA_BUF, &MASTER_CHIP}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DATA_1)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DATA_BUF)}, {fapi::ReturnCode::EI_TYPE_CALLOUT, 2, fapi::PRI_HIGH}, {fapi::ReturnCode::EI_TYPE_DECONF, 2}, {fapi::ReturnCode::EI_TYPE_GARD, 2}}; RC.addErrorInfo(l_objects, l_entries, 5);}

#define RC_TEST_ERROR_B_CALL_FUNC_TO_ANALYZE_ERROR(RC) FAPI_EXEC_HWP(RC, hwpTestAnalyzeError, MASTER_CHIP)
#define RC_TEST_ERROR_B_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_TEST_ERROR_B_ADD_ERROR_INFO(RC) 

#define RC_INITFILE_INCORRECT_VER_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_INITFILE_INCORRECT_VER_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_INITFILE_INCORRECT_VER_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_IF_VER}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_IF_VER)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_INITFILE_ATTR_ID_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_INITFILE_ATTR_ID_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_INITFILE_ATTR_ID_OUT_OF_RANGE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_IF_ATTR_ID_OUT_OF_RANGE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_IF_ATTR_ID_OUT_OF_RANGE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_INITFILE_LIT_ID_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_INITFILE_LIT_ID_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_INITFILE_LIT_ID_OUT_OF_RANGE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_IF_LIT_ID_OUT_OF_RANGE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_IF_LIT_ID_OUT_OF_RANGE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_HWP_EXEC_INITFILE_TEST_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_HWP_EXEC_INITFILE_TEST_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_HWP_EXEC_INITFILE_TEST_FAILED_ADD_ERROR_INFO(RC) 

#define RC_HWP_ATTR_UNIT_TEST_FAIL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_HWP_ATTR_UNIT_TEST_FAIL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_HWP_ATTR_UNIT_TEST_FAIL_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_INVALID_ARGS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_INVALID_ARGS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_INVALID_ARGS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ARGS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ARGS)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_INTERNAL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_INTERNAL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_INTERNAL_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ERR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FL_P8_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_P8_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_P8_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FAIL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FAIL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FAIL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FL_P8_FAIL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_P8_FAIL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_P8_FAIL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FL_TIMEOUT_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_TIMEOUT_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_TIMEOUT_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FAIL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FAIL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FAIL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FAIL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FAIL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FAIL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FRTL_TIMEOUT_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_TIMEOUT_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_TIMEOUT_ERR_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_INVALID_ARGS_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_INVALID_ARGS_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_INVALID_ARGS_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_INTERNAL_ERR_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_INTERNAL_ERR_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_INTERNAL_ERR_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_ERR_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_ERR_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_ERR_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_WIRETEST_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_WIRETEST_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_WIRETEST_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_DESKEW_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_DESKEW_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_DESKEW_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_EYE_OPT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_EYE_OPT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_EYE_OPT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_REPAIR_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_REPAIR_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_REPAIR_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_FUNC_MODE_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_FUNC_MODE_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_FUNC_MODE_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_WIRETEST_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_WIRETEST_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_WIRETEST_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_DESKEW_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_DESKEW_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_DESKEW_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_EYE_OPT_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_EYE_OPT_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_EYE_OPT_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_REPAIR_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_REPAIR_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_REPAIR_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FUNC_MODE_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FUNC_MODE_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FUNC_MODE_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_GCR_WRITE_MISMATCH_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_GCR_WRITE_MISMATCH_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_GCR_WRITE_MISMATCH_RC_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&READ_BUF, &WRITE_BUF}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(READ_BUF)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(WRITE_BUF)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_MSS_CCS_READ_MISCOMPARE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_CCS_READ_MISCOMPARE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_CCS_READ_MISCOMPARE_ADD_ERROR_INFO(RC) 

#define RC_MSS_CCS_UE_SUE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_CCS_UE_SUE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_CCS_UE_SUE_ADD_ERROR_INFO(RC) 

#define RC_MSS_CCS_CAL_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_CCS_CAL_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_CCS_CAL_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_MSS_PLACE_HOLDER_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_PLACE_HOLDER_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_PLACE_HOLDER_ERROR_ADD_ERROR_INFO(RC) 



#endif
