// fapiHwpErrorInfo.H
// This file is generated by perl script fapiParseErrorInfo.pl

#ifndef FAPIHWPERRORINFO_H_
#define FAPIHWPERRORINFO_H_

/**
 * @brief Error Information macros
 */
#define RC_TEST_ERROR_A_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_TEST_ERROR_A_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, hwpTestFfdc1, MASTER_CHIP, RC); }
#define RC_TEST_ERROR_A_ADD_ERROR_INFO(RC) fapi::fapiCheckType<const fapi::Target *>(&MASTER_CHIP); fapi::fapiCheckType<const fapi::Target *>(&MASTER_CHIP); fapi::fapiCheckType<const fapi::Target *>(&MASTER_CHIP); {const void * l_objects[] = {&FFDC_DATA_1, &FFDC_DATA_BUF, &MASTER_CHIP}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DATA_1)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DATA_BUF)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(MASTER_CHIP)}, {fapi::ReturnCode::EI_TYPE_CALLOUT, 2, fapi::PRI_HIGH}, {fapi::ReturnCode::EI_TYPE_DECONF, 2}, {fapi::ReturnCode::EI_TYPE_GARD, 2}}; RC.addErrorInfo(l_objects, l_entries, 6);}

#define RC_TEST_ERROR_B_CALL_FUNC_TO_ANALYZE_ERROR(RC) FAPI_EXEC_HWP(RC, hwpTestAnalyzeError, MASTER_CHIP)
#define RC_TEST_ERROR_B_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_TEST_ERROR_B_ADD_ERROR_INFO(RC) 

#define RC_TEST_CONFIG_NO_MCS_CHIPLETS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_TEST_CONFIG_NO_MCS_CHIPLETS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_TEST_CONFIG_NO_MCS_CHIPLETS_ADD_ERROR_INFO(RC) 

#define RC_TEST_CONFIG_PARENT_CHIP_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_TEST_CONFIG_PARENT_CHIP_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_TEST_CONFIG_PARENT_CHIP_MISMATCH_ADD_ERROR_INFO(RC) 

#define RC_TEST_DQ_NO_ERR_ON_BAD_PARAMS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_TEST_DQ_NO_ERR_ON_BAD_PARAMS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_TEST_DQ_NO_ERR_ON_BAD_PARAMS_ADD_ERROR_INFO(RC) 

#define RC_TEST_DQ_BAD_DATA_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_TEST_DQ_BAD_DATA_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_TEST_DQ_BAD_DATA_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_DATA1, &FFDC_DATA2}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DATA1)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DATA2)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_INITFILE_INCORRECT_VER_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_INITFILE_INCORRECT_VER_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_INITFILE_INCORRECT_VER_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_IF_VER}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_IF_VER)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_INITFILE_ATTR_ID_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_INITFILE_ATTR_ID_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_INITFILE_ATTR_ID_OUT_OF_RANGE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_IF_ATTR_ID_OUT_OF_RANGE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_IF_ATTR_ID_OUT_OF_RANGE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_INITFILE_LIT_ID_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_INITFILE_LIT_ID_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_INITFILE_LIT_ID_OUT_OF_RANGE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_IF_LIT_ID_OUT_OF_RANGE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_IF_LIT_ID_OUT_OF_RANGE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_INITFILE_TGT_NUM_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_INITFILE_TGT_NUM_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_INITFILE_TGT_NUM_OUT_OF_RANGE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_IF_TGT_NUM, &FFDC_IF_NUM_TGTS_PASSED_IN}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_IF_TGT_NUM)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_IF_NUM_TGTS_PASSED_IN)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_HWP_EXEC_INITFILE_TEST_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_HWP_EXEC_INITFILE_TEST_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_HWP_EXEC_INITFILE_TEST_FAILED_ADD_ERROR_INFO(RC) 

#define RC_HWP_EXEC_INITFILE_TEST_INCORRECT_NUM_MBAS_FOUND_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_HWP_EXEC_INITFILE_TEST_INCORRECT_NUM_MBAS_FOUND_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_HWP_EXEC_INITFILE_TEST_INCORRECT_NUM_MBAS_FOUND_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_IF_TEST_NUM_MBAS_FOUND}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_IF_TEST_NUM_MBAS_FOUND)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_HWP_EXEC_INITFILE_TEST_NO_MEMBUF_FOUND_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_HWP_EXEC_INITFILE_TEST_NO_MEMBUF_FOUND_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_HWP_EXEC_INITFILE_TEST_NO_MEMBUF_FOUND_ADD_ERROR_INFO(RC) 

#define RC_HWP_ATTR_UNIT_TEST_FAIL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_HWP_ATTR_UNIT_TEST_FAIL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_HWP_ATTR_UNIT_TEST_FAIL_ADD_ERROR_INFO(RC) 

#define RC_BAD_DQ_DIMM_BAD_PARAM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_BAD_DQ_DIMM_BAD_PARAM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_BAD_DQ_DIMM_BAD_PARAM_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_PORT, &FFDC_DIMM, &FFDC_RANK}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_PORT)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DIMM)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_RANK)}}; RC.addErrorInfo(l_objects, l_entries, 3);}

#define RC_BAD_DQ_DIMM_NOT_FOUND_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_BAD_DQ_DIMM_NOT_FOUND_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_BAD_DQ_DIMM_NOT_FOUND_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FFDC_MBA_TARGET, &FFDC_PORT, &FFDC_DIMM}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_MBA_TARGET)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_PORT)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FFDC_DIMM)}}; RC.addErrorInfo(l_objects, l_entries, 3);}

#define IO_RUN_TRAINING_INVALID_ARGS_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_INVALID_ARGS_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_INVALID_ARGS_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_INTERNAL_ERR_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_INTERNAL_ERR_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_INTERNAL_ERR_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_ERR_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_ERR_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_ERR_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_WIRETEST_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_WIRETEST_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_WIRETEST_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_DESKEW_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_DESKEW_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_DESKEW_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_EYE_OPT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_EYE_OPT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_EYE_OPT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_REPAIR_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_REPAIR_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_REPAIR_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FAIL_FUNC_MODE_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FAIL_FUNC_MODE_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FAIL_FUNC_MODE_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_WIRETEST_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_WIRETEST_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_WIRETEST_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_DESKEW_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_DESKEW_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_DESKEW_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_EYE_OPT_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_EYE_OPT_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_EYE_OPT_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_REPAIR_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_REPAIR_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_REPAIR_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_RUN_TRAINING_FUNC_MODE_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_FUNC_MODE_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_FUNC_MODE_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_GCR_WRITE_MISMATCH_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_GCR_WRITE_MISMATCH_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_GCR_WRITE_MISMATCH_RC_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&READ_BUF, &WRITE_BUF}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(READ_BUF)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(WRITE_BUF)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define IO_RUN_TRAINING_INVALID_INVOCATION_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_RUN_TRAINING_INVALID_INVOCATION_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_RUN_TRAINING_INVALID_INVOCATION_RC_ADD_ERROR_INFO(RC) 

#define IO_DCCAL_OFFCAL_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_DCCAL_OFFCAL_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_DCCAL_OFFCAL_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define IO_DCCAL_OFFCAL_ERROR_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_DCCAL_OFFCAL_ERROR_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_DCCAL_OFFCAL_ERROR_RC_ADD_ERROR_INFO(RC) 

#define IO_DCCAL_INVALID_INVOCATION_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_DCCAL_INVALID_INVOCATION_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_DCCAL_INVALID_INVOCATION_RC_ADD_ERROR_INFO(RC) 

#define IO_DCCAL_ZCAL_ERROR_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_DCCAL_ZCAL_ERROR_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_DCCAL_ZCAL_ERROR_RC_ADD_ERROR_INFO(RC) 

#define IO_DCCAL_ZCAL_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define IO_DCCAL_ZCAL_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define IO_DCCAL_ZCAL_TIMEOUT_RC_ADD_ERROR_INFO(RC) 

#define RC_PROC_ADU_COHERENT_UTILS_INVALID_ARGS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_INVALID_ARGS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_INVALID_ARGS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&START_ADDRESS, &END_ADDRESS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(START_ADDRESS)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(END_ADDRESS)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_ADU_COHERENT_UTILS_FBC_INIT_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_FBC_INIT_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_FBC_INIT_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_ADU_COHERENT_UTILS_FBC_STOPPED_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_FBC_STOPPED_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_FBC_STOPPED_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_ADU_COHERENT_UTILS_STATUS_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_STATUS_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_ADU_COHERENT_UTILS_STATUS_MISMATCH_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&STATUS_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_ADU_UTILS_INVALID_ARGS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_ADU_UTILS_INVALID_ARGS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_ADU_UTILS_INVALID_ARGS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ARGS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ARGS)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_ADU_UTILS_INTERNAL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_ADU_UTILS_INTERNAL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_ADU_UTILS_INTERNAL_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ERR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define FAPI_RC_PLAT_ERR_ADU_LOCKED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define FAPI_RC_PLAT_ERR_ADU_LOCKED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define FAPI_RC_PLAT_ERR_ADU_LOCKED_ADD_ERROR_INFO(RC) 

#define RC_PROC_CONTINUE_SBE_BAD_STATE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CONTINUE_SBE_BAD_STATE_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_sbe_ffdc, CHIP_IN_ERROR, RC); }
#define RC_PROC_CONTINUE_SBE_BAD_STATE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SM_STATE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SM_STATE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_INVALID_ARGS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_INVALID_ARGS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_INVALID_ARGS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ARGS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ARGS)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FL_P8_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_P8_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_P8_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FAIL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FAIL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_CEN_FAIL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FL_P8_FAIL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_P8_FAIL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_P8_FAIL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FL_TIMEOUT_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_TIMEOUT_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FL_TIMEOUT_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FAIL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FAIL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_CEN_FAIL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FAIL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FAIL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_P8_FAIL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CEN_FRAMELOCK_FRTL_TIMEOUT_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_TIMEOUT_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CEN_FRAMELOCK_FRTL_TIMEOUT_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CLEANUP_FBC_STOPPED_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CLEANUP_FBC_STOPPED_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CLEANUP_FBC_STOPPED_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_CLEANUP_DUMMY_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CLEANUP_DUMMY_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CLEANUP_DUMMY_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_SPCWKUP_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_SPCWKUP_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_SPCWKUP_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_SPCWKUP_CODE_BAD_ENTITY_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_SPCWKUP_CODE_BAD_ENTITY_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_SPCWKUP_CODE_BAD_ENTITY_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_SPCWKUP_CODE_BAD_OP_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_SPCWKUP_CODE_BAD_OP_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_SPCWKUP_CODE_BAD_OP_ADD_ERROR_INFO(RC) 

#define RC_PROC_FAB_SMP_PCIE_NOT_F_LINK_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_FAB_SMP_PCIE_NOT_F_LINK_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_FAB_SMP_PCIE_NOT_F_LINK_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ATTR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ATTR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_FAB_SMP_FABRIC_NODE_ID_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_FAB_SMP_FABRIC_NODE_ID_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_FAB_SMP_FABRIC_NODE_ID_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ATTR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ATTR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_FAB_SMP_FABRIC_CHIP_ID_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_FAB_SMP_FABRIC_CHIP_ID_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_FAB_SMP_FABRIC_CHIP_ID_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ATTR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ATTR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_FAB_SMP_EPSILON_TABLE_TYPE_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_FAB_SMP_EPSILON_TABLE_TYPE_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_FAB_SMP_EPSILON_TABLE_TYPE_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ATTR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ATTR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_FAB_SMP_EPSILON_GB_DIRECTION_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_FAB_SMP_EPSILON_GB_DIRECTION_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_FAB_SMP_EPSILON_GB_DIRECTION_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ATTR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ATTR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_FAB_SMP_ASYNC_SAFE_MODE_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_FAB_SMP_ASYNC_SAFE_MODE_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_FAB_SMP_ASYNC_SAFE_MODE_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ATTR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ATTR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_FAB_SMP_PUMP_MODE_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_FAB_SMP_PUMP_MODE_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_FAB_SMP_PUMP_MODE_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ATTR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ATTR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_FAB_SMP_X_BUS_WIDTH_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_FAB_SMP_X_BUS_WIDTH_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_FAB_SMP_X_BUS_WIDTH_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ATTR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ATTR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_FAB_SMP_MCS_INTERLEAVED_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_FAB_SMP_MCS_INTERLEAVED_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_FAB_SMP_MCS_INTERLEAVED_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ATTR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ATTR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_GETTRACEARRAY_INVALID_ARGS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_GETTRACEARRAY_INVALID_ARGS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_GETTRACEARRAY_INVALID_ARGS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ARGS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ARGS)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_GETTRACEARRAY_INTERNAL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_GETTRACEARRAY_INTERNAL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_GETTRACEARRAY_INTERNAL_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ERR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_L2_FLUSH_CMD_TIMEOUT_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_L2_FLUSH_CMD_TIMEOUT_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_l2_ffdc, EX_CHIPLET_IN_ERROR, RC); }
#define RC_PROC_L2_FLUSH_CMD_TIMEOUT_RC_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&CMD_REG_ADDR, &CMD_REG, &NUMBER_OF_ATTEMPTS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CMD_REG_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CMD_REG)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(NUMBER_OF_ATTEMPTS)}}; RC.addErrorInfo(l_objects, l_entries, 3);}

#define RC_PROC_L2_FLUSH_CMD_ERROR_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_L2_FLUSH_CMD_ERROR_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_l2_ffdc, EX_CHIPLET_IN_ERROR, RC); }
#define RC_PROC_L2_FLUSH_CMD_ERROR_RC_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&CMD_REG_ADDR, &CMD_REG}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CMD_REG_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CMD_REG)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_L2_FLUSH_UNKNOWN_PLATFORM_RC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_L2_FLUSH_UNKNOWN_PLATFORM_RC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_L2_FLUSH_UNKNOWN_PLATFORM_RC_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&PLATFORM}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(PLATFORM)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROCPM_OCB_ACCESS_PUT_SCOM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_ACCESS_PUT_SCOM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_ACCESS_PUT_SCOM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_ACCESS_GET_SCOM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_ACCESS_GET_SCOM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_ACCESS_GET_SCOM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_ACCESS_LENGTH_CHECK_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_ACCESS_LENGTH_CHECK_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_ACCESS_LENGTH_CHECK_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_ACCESS_CHANNEL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_ACCESS_CHANNEL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_ACCESS_CHANNEL_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_ACCESS_OP_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_ACCESS_OP_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_ACCESS_OP_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_PUT_DATA_LENGTH_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_PUT_DATA_LENGTH_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_PUT_DATA_LENGTH_ERROR_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCB_ACCESS_GET_BUFFER_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCB_ACCESS_GET_BUFFER_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCB_ACCESS_GET_BUFFER_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCBINIT_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCBINIT_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCBINIT_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCBINIT_BAD_Q_LENGTH_PARM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCBINIT_BAD_Q_LENGTH_PARM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCBINIT_BAD_Q_LENGTH_PARM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCBINIT_BAD_ITP_TYPE_PARM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCBINIT_BAD_ITP_TYPE_PARM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCBINIT_BAD_ITP_TYPE_PARM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCBINIT_BAD_Q_OVER_UNDERFLOW_PARM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCBINIT_BAD_Q_OVER_UNDERFLOW_PARM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCBINIT_BAD_Q_OVER_UNDERFLOW_PARM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCBINIT_BAD_CHAN_NUM_PARM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCBINIT_BAD_CHAN_NUM_PARM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCBINIT_BAD_CHAN_NUM_PARM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCBINIT_BAD_CHAN_TYPE_PARM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCBINIT_BAD_CHAN_TYPE_PARM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCBINIT_BAD_CHAN_TYPE_PARM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_CONTROL_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_CONTROL_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_CONTROL_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_CONTROL_BAD_405RESET_PARM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_CONTROL_BAD_405RESET_PARM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_CONTROL_BAD_405RESET_PARM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_CONTROL_BAD_405BOOT_PARM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_CONTROL_BAD_405BOOT_PARM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_CONTROL_BAD_405BOOT_PARM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_CONTROL_TEST_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_CONTROL_TEST_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_CONTROL_TEST_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_CONTROL_PUTSCOM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_CONTROL_PUTSCOM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_CONTROL_PUTSCOM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_LOAD_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_LOAD_BAD_PARM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_PARM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_PARM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_LOAD_BAD_CHANNEL_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_CHANNEL_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_CHANNEL_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_LOAD_BAD_BINARY_FILE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_BINARY_FILE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_LOAD_BAD_BINARY_FILE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCC_LOAD_TEST_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCC_LOAD_TEST_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCC_LOAD_TEST_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCCSRAM_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCCSRAM_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCCSRAM_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_OCCSRAM_TEST_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_OCCSRAM_TEST_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_OCCSRAM_TEST_ADD_ERROR_INFO(RC) 

#define RC_PROC_OHA_CODE_PUTGETSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_OHA_CODE_PUTGETSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_OHA_CODE_PUTGETSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_OHA_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_OHA_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_OHA_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROC_OHA_CODE_BITOP_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_OHA_CODE_BITOP_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_OHA_CODE_BITOP_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_BAR_INDEX_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_BAR_INDEX_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_BAR_INDEX_OUT_OF_RANGE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_BAR_SCOPE_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_BAR_SCOPE_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_BAR_SCOPE_OUT_OF_RANGE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_ADDR_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_ADDR_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_ADDR_OUT_OF_RANGE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_BAR_MASK_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_BAR_MASK_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_BAR_MASK_OUT_OF_RANGE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_BAR_MODE_NOT_SUPPORTED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_BAR_MODE_NOT_SUPPORTED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_BAR_MODE_NOT_SUPPORTED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_BAR_PUTSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_BAR_PUTSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_BAR_PUTSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_COHERENT_UTILS_INVALID_ARGS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_INVALID_ARGS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_INVALID_ARGS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&START_ADDRESS, &END_ADDRESS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(START_ADDRESS)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(END_ADDRESS)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_PBA_COHERENT_UTILS_FBC_INIT_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_FBC_INIT_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_FBC_INIT_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_COHERENT_UTILS_FBC_STOPPED_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_FBC_STOPPED_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_FBC_STOPPED_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_COHERENT_UTILS_PBA_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_PBA_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_PBA_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ERRPT0_DATA, &ERRPT1_DATA, &ERRPT2_DATA, &FIR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERRPT0_DATA)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERRPT1_DATA)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERRPT2_DATA)}, {fapi::ReturnCode::EI_TYPE_FFDC, 3, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 4);}

#define RC_PROC_PBA_COHERENT_UTILS_PBA_READ_STATUS_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_PBA_READ_STATUS_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_PBA_READ_STATUS_MISMATCH_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&STATUS2_DATA, &STATUS3_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS2_DATA)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS3_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_PBA_COHERENT_UTILS_PBA_WRITE_STATUS_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_PBA_WRITE_STATUS_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_PBA_WRITE_STATUS_MISMATCH_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&STATUS0_DATA, &STATUS1_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS0_DATA)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS1_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_PBA_COHERENT_UTILS_OCB_STATUS_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_OCB_STATUS_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_COHERENT_UTILS_OCB_STATUS_MISMATCH_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&STATUS_DATA, &ERR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS_DATA)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_PBA_INIT_INCORRECTMODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_INIT_INCORRECTMODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_INIT_INCORRECTMODE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_INIT_SCOPE_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_INIT_SCOPE_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_INIT_SCOPE_OUT_OF_RANGE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_INIT_MASK_OUT_OF_RANGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_INIT_MASK_OUT_OF_RANGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_INIT_MASK_OUT_OF_RANGE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_INIT_MODE_NOT_SUPPORTED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_INIT_MODE_NOT_SUPPORTED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_INIT_MODE_NOT_SUPPORTED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_INIT_PUTSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_INIT_PUTSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_INIT_PUTSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBA_UTILS_BAD_PBA_REGION_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_UTILS_BAD_PBA_REGION_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_UTILS_BAD_PBA_REGION_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ERR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_PBA_UTILS_PBA_SLAVE_RESET_FAIL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_UTILS_PBA_SLAVE_RESET_FAIL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_UTILS_PBA_SLAVE_RESET_FAIL_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ERR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_PBA_UTILS_INVALID_ARGS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBA_UTILS_INVALID_ARGS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBA_UTILS_INVALID_ARGS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ARGS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ARGS)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_PBAXCFG_INIT_GETSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBAXCFG_INIT_GETSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBAXCFG_INIT_GETSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBAXCFG_INIT_PUTSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBAXCFG_INIT_PUTSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBAXCFG_INIT_PUTSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBAXCFG_INIT_INCORRECTMODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBAXCFG_INIT_INCORRECTMODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBAXCFG_INIT_INCORRECTMODE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBAXSNDTX_INIT_GETSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBAXSNDTX_INIT_GETSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBAXSNDTX_INIT_GETSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBAXSNDTX_INIT_PUTSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBAXSNDTX_INIT_PUTSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBAXSNDTX_INIT_PUTSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PBAXSNDTX_INIT_INCORRECTMODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PBAXSNDTX_INIT_INCORRECTMODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PBAXSNDTX_INIT_INCORRECTMODE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_CODE_SAFE_FSM_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_CODE_SAFE_FSM_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_CODE_SAFE_FSM_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_CODE_PUTGETSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_CODE_PUTGETSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_CODE_PUTGETSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_CODE_BITOP_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_CODE_BITOP_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_CODE_BITOP_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_RESCLK_CODE_RESCLK_PROC_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_RESCLK_PROC_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_RESCLK_PROC_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_RESCLK_CODE_PUTGETSCOM_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_PUTGETSCOM_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_PUTGETSCOM_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_RESCLK_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_RESCLK_CODE_BITOP_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_BITOP_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_BITOP_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROC_PCBS_RESCLK_CODE_DEACTIVATE_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_DEACTIVATE_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_PCBS_RESCLK_CODE_DEACTIVATE_FAILED_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_OCC_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OCC_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OCC_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_CPU_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_CPU_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_CPU_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_PMC_FORCE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PMC_FORCE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PMC_FORCE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_PCBS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PCBS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PCBS_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_PMC_INIT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PMC_INIT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PMC_INIT_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_PORESW_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PORESW_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PORESW_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_POREGPE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_POREGPE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_POREGPE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_OHA_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OHA_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OHA_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_PBA_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PBA_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_PBA_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_OCC_SRAM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OCC_SRAM_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OCC_SRAM_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PREP_CODE_PROC_OCB_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OCB_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PREP_CODE_PROC_OCB_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PMC_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PMC_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PMC_CODE_BAD_MODE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&MODE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(MODE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROCPM_PMCINIT_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PMCINIT_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PMCINIT_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_GPE0_RESET_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_GPE0_RESET_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_GPE0_RESET_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_GPE1_RESET_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_GPE1_RESET_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_GPE1_RESET_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_GPE_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_GPE_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_GPE_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_GPE_BAD_ENGINE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_GPE_BAD_ENGINE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_GPE_BAD_ENGINE_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PORESLW_CODE_BAD_TBA_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PORESLW_CODE_BAD_TBA_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PORESLW_CODE_BAD_TBA_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_SLW_RESET_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_SLW_RESET_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_SLW_RESET_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PORESLW_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PORESLW_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PORESLW_CODE_BAD_MODE_ADD_ERROR_INFO(RC) 

#define RC_PROC_PREP_MASTER_WINKLE_SBE_NOT_RUNNING_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PREP_MASTER_WINKLE_SBE_NOT_RUNNING_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_sbe_ffdc, CHIP_IN_ERROR, RC); }
#define RC_PROC_PREP_MASTER_WINKLE_SBE_NOT_RUNNING_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SBE_STATUS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SBE_STATUS)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_PREP_MASTER_WINKLE_BAD_ISTEP_NUM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PREP_MASTER_WINKLE_BAD_ISTEP_NUM_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_sbe_ffdc, CHIP_IN_ERROR, RC); }
#define RC_PROC_PREP_MASTER_WINKLE_BAD_ISTEP_NUM_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SBE_VITAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SBE_VITAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_PREP_MASTER_WINKLE_BAD_SUBSTEP_NUM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_PREP_MASTER_WINKLE_BAD_SUBSTEP_NUM_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_sbe_ffdc, CHIP_IN_ERROR, RC); }
#define RC_PROC_PREP_MASTER_WINKLE_BAD_SUBSTEP_NUM_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SBE_VITAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SBE_VITAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROCPM_PSS_CODE_BAD_MODE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PSS_CODE_BAD_MODE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PSS_CODE_BAD_MODE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&MODE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(MODE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROCPM_PSS_WRONG_DEVICE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PSS_WRONG_DEVICE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PSS_WRONG_DEVICE_ADD_ERROR_INFO(RC) 

#define RC_PROC_RAM_CORE_THD_DIS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_RAM_CORE_THD_DIS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_RAM_CORE_THD_DIS_ADD_ERROR_INFO(RC) 

#define RC_PROC_RAM_CORE_NOT_QUIESCED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_RAM_CORE_NOT_QUIESCED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_RAM_CORE_NOT_QUIESCED_ADD_ERROR_INFO(RC) 

#define RC_PROC_RAM_CORE_QUIESCE_FAIL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_RAM_CORE_QUIESCE_FAIL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_RAM_CORE_QUIESCE_FAIL_ADD_ERROR_INFO(RC) 

#define RC_PROC_RAM_CORE_RECOV_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_RAM_CORE_RECOV_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_RAM_CORE_RECOV_ADD_ERROR_INFO(RC) 

#define RC_PROC_RAM_CORE_RAM_EXCEPT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_RAM_CORE_RAM_EXCEPT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_RAM_CORE_RAM_EXCEPT_ADD_ERROR_INFO(RC) 

#define RC_PROC_RAM_CORE_RAM_NOT_DONE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_RAM_CORE_RAM_NOT_DONE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_RAM_CORE_RAM_NOT_DONE_ADD_ERROR_INFO(RC) 

#define RC_SBE_FABRICINIT_FBC_STOPPED_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_FABRICINIT_FBC_STOPPED_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_FABRICINIT_FBC_STOPPED_ERR_ADD_ERROR_INFO(RC) 

#define RC_SBE_FABRICINIT_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_FABRICINIT_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_FABRICINIT_ERR_ADD_ERROR_INFO(RC) 

#define PROC_SBE_PB_START_CLOCK_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define PROC_SBE_PB_START_CLOCK_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define PROC_SBE_PB_START_CLOCK_ERROR_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_POREBAR_IMAGE_BRANCH_VALUE_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_POREBAR_IMAGE_BRANCH_VALUE_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_POREBAR_IMAGE_BRANCH_VALUE_ERROR_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_POREBAR_LOC_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_POREBAR_LOC_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_POREBAR_LOC_ERROR_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_POREBAR_PBABAR_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_POREBAR_PBABAR_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_POREBAR_PBABAR_ERROR_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_PBA_SLVRST_TIMED_OUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_PBA_SLVRST_TIMED_OUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_PBA_SLVRST_TIMED_OUT_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_POREBAR_IMAGE_SIZE_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_POREBAR_IMAGE_SIZE_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_POREBAR_IMAGE_SIZE_ERROR_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_POREBAR_IMAGE_PLACEMENT_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_POREBAR_IMAGE_PLACEMENT_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_POREBAR_IMAGE_PLACEMENT_ERROR_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_POREBAR_IMAGE_ADDR_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_POREBAR_IMAGE_ADDR_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_POREBAR_IMAGE_ADDR_ERROR_ADD_ERROR_INFO(RC) 

#define RC_PROC_SETUP_BARS_NON_MIRRORED_RANGE_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_NON_MIRRORED_RANGE_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_NON_MIRRORED_RANGE_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&BASE_ADDR, &SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SETUP_BARS_NON_MIRRORED_RANGE_OVERLAP_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_NON_MIRRORED_RANGE_OVERLAP_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_NON_MIRRORED_RANGE_OVERLAP_ATTR_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_SETUP_BARS_NON_MIRRORED_RANGE_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_NON_MIRRORED_RANGE_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_NON_MIRRORED_RANGE_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&BASE_ADDR, &SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SETUP_BARS_MIRRORED_RANGE_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_MIRRORED_RANGE_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_MIRRORED_RANGE_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&BASE_ADDR, &SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SETUP_BARS_MIRRORED_RANGE_OVERLAP_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_MIRRORED_RANGE_OVERLAP_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_MIRRORED_RANGE_OVERLAP_ATTR_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_SETUP_BARS_MIRRORED_RANGE_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_MIRRORED_RANGE_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_MIRRORED_RANGE_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&BASE_ADDR, &SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SETUP_BARS_FOREIGN_NEAR_RANGE_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_FOREIGN_NEAR_RANGE_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_FOREIGN_NEAR_RANGE_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&BASE_ADDR, &SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SETUP_BARS_FOREIGN_FAR_RANGE_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_FOREIGN_FAR_RANGE_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_FOREIGN_FAR_RANGE_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&BASE_ADDR, &SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SETUP_BARS_PSI_BAR_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_PSI_BAR_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_PSI_BAR_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&BASE_ADDR, &SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SETUP_BARS_FSP_BAR_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_FSP_BAR_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_FSP_BAR_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&BASE_ADDR, &SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SETUP_BARS_FSP_MMIO_MASK_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_FSP_MMIO_MASK_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_FSP_MMIO_MASK_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_SETUP_BARS_INTP_BAR_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_INTP_BAR_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_INTP_BAR_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&BASE_ADDR, &SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SETUP_BARS_NX_MMIO_BAR_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_NX_MMIO_BAR_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_NX_MMIO_BAR_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&BASE_ADDR, &SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SETUP_BARS_PCIE_BAR_ATTR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_PCIE_BAR_ATTR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_PCIE_BAR_ATTR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&UNIT, &RANGE, &BASE_ADDR, &SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(UNIT)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(RANGE)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 3, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 4);}

#define RC_PROC_SETUP_BARS_NODE_ADD_INTERNAL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_NODE_ADD_INTERNAL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_NODE_ADD_INTERNAL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_SETUP_BARS_NODE_FIND_INTERNAL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_NODE_FIND_INTERNAL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_NODE_FIND_INTERNAL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_SETUP_BARS_DUPLICATE_FABRIC_ID_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_DUPLICATE_FABRIC_ID_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_DUPLICATE_FABRIC_ID_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&NODE_ID, &CHIP_ID}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(NODE_ID)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CHIP_ID)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SETUP_BARS_NODE_NON_MIRRORED_RANGE_OVERLAP_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_NODE_NON_MIRRORED_RANGE_OVERLAP_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_NODE_NON_MIRRORED_RANGE_OVERLAP_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&NODE_BASE_ADDR, &NODE_SIZE, &CHIP_BASE_ADDR, &CHIP_SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(NODE_BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(NODE_SIZE)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CHIP_BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 3, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CHIP_SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 4);}

#define RC_PROC_SETUP_BARS_NODE_MIRRORED_RANGE_OVERLAP_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_NODE_MIRRORED_RANGE_OVERLAP_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_NODE_MIRRORED_RANGE_OVERLAP_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&NODE_BASE_ADDR, &NODE_SIZE, &CHIP_BASE_ADDR, &CHIP_SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(NODE_BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(NODE_SIZE)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CHIP_BASE_ADDR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 3, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CHIP_SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 4);}

#define RC_PROC_SETUP_BARS_INVALID_BAR_REG_DEF_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_INVALID_BAR_REG_DEF_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_INVALID_BAR_REG_DEF_ADD_ERROR_INFO(RC) 

#define RC_PROC_SETUP_BARS_SIZE_XLATE_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SETUP_BARS_SIZE_XLATE_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SETUP_BARS_SIZE_XLATE_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_SLWB_INPUT_IMAGE_SIZE_MESS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_INPUT_IMAGE_SIZE_MESS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_INPUT_IMAGE_SIZE_MESS_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&DATA_IMG_SIZE_INP, &DATA_IMG_SIZE_MAX}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(DATA_IMG_SIZE_INP)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(DATA_IMG_SIZE_MAX)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SLWB_IMAGE_SIZE_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_IMAGE_SIZE_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_IMAGE_SIZE_MISMATCH_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&DATA_IMG_SIZE_INP, &DATA_IMG_SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(DATA_IMG_SIZE_INP)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(DATA_IMG_SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SLWB_MS_IMAGE_SIZE_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_MS_IMAGE_SIZE_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_MS_IMAGE_SIZE_MISMATCH_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&DATA_IMG_SIZE_INP, &DATA_IMG_SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(DATA_IMG_SIZE_INP)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(DATA_IMG_SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_SLWB_MAX_IMAGE_SIZE_EXCEEDED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_MAX_IMAGE_SIZE_EXCEEDED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_MAX_IMAGE_SIZE_EXCEEDED_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&DATA_IMG_SIZE_OLD, &DATA_IMG_SIZE_EST, &DATA_IMG_SIZE_MAX}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(DATA_IMG_SIZE_OLD)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(DATA_IMG_SIZE_EST)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(DATA_IMG_SIZE_MAX)}}; RC.addErrorInfo(l_objects, l_entries, 3);}

#define RC_PROC_SLWB_INTERNAL_IMAGE_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_INTERNAL_IMAGE_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_INTERNAL_IMAGE_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&RC_LOCAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(RC_LOCAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_SLWB_MS_INTERNAL_IMAGE_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_MS_INTERNAL_IMAGE_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_MS_INTERNAL_IMAGE_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&RC_LOCAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(RC_LOCAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_SLWB_DELETE_IMAGE_SECTION_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_DELETE_IMAGE_SECTION_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_DELETE_IMAGE_SECTION_ERROR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&RC_LOCAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(RC_LOCAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_SLWB_RING_RETRIEVAL_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_RING_RETRIEVAL_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_RING_RETRIEVAL_ERROR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&RC_LOCAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(RC_LOCAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_SLWB_RS4_DECOMPRESSION_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_RS4_DECOMPRESSION_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_RS4_DECOMPRESSION_ERROR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&RC_LOCAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(RC_LOCAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_SLWB_WF_CREATION_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_WF_CREATION_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_WF_CREATION_ERROR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&RC_LOCAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(RC_LOCAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_SLWB_IMAGE_UPDATE_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_IMAGE_UPDATE_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_IMAGE_UPDATE_ERROR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&RC_LOCAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(RC_LOCAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_SLWB_APPEND_SLW_SECTION_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_APPEND_SLW_SECTION_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_APPEND_SLW_SECTION_ERROR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&RC_LOCAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(RC_LOCAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_SLWB_KEYWORD_NOT_FOUND_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_KEYWORD_NOT_FOUND_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_KEYWORD_NOT_FOUND_ERROR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&RC_LOCAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(RC_LOCAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_SLWB_UNKNOWN_XIP_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_UNKNOWN_XIP_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_UNKNOWN_XIP_ERROR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&RC_LOCAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(RC_LOCAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_SLWB_UNKNOWN_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_SLWB_UNKNOWN_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_SLWB_UNKNOWN_ERROR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&RC_LOCAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(RC_LOCAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_START_CLOCKS_CHIPLETS_CLK_STATUS_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_START_CLOCKS_CHIPLETS_CLK_STATUS_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_START_CLOCKS_CHIPLETS_CLK_STATUS_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&STATUS_REG, &CHIPLET_BASE_SCOM_ADDR}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS_REG)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CHIPLET_BASE_SCOM_ADDR)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_START_CLOCKS_CHIPLETS_FIR_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_START_CLOCKS_CHIPLETS_FIR_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_START_CLOCKS_CHIPLETS_FIR_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FIR_REG, &CHIPLET_BASE_SCOM_ADDR}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIR_REG)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CHIPLET_BASE_SCOM_ADDR)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_START_SBE_FAILED_TO_FINISH_AUTO_POR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_START_SBE_FAILED_TO_FINISH_AUTO_POR_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_sbe_ffdc, CHIP_IN_ERROR, RC); }
#define RC_PROC_START_SBE_FAILED_TO_FINISH_AUTO_POR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SBE_STATUS}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SBE_STATUS)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_START_SBE_FAILED_TO_AUTO_START_SBE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_START_SBE_FAILED_TO_AUTO_START_SBE_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_sbe_ffdc, CHIP_IN_ERROR, RC); }
#define RC_PROC_START_SBE_FAILED_TO_AUTO_START_SBE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SBE_VITAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SBE_VITAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_STOP_DEADMAN_TIMER_BAD_ISTEP_NUM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_STOP_DEADMAN_TIMER_BAD_ISTEP_NUM_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_sbe_ffdc, CHIP_IN_ERROR, RC); }
#define RC_PROC_STOP_DEADMAN_TIMER_BAD_ISTEP_NUM_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SBE_VITAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SBE_VITAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_STOP_DEADMAN_TIMER_BAD_SUBSTEP_NUM_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_STOP_DEADMAN_TIMER_BAD_SUBSTEP_NUM_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_sbe_ffdc, CHIP_IN_ERROR, RC); }
#define RC_PROC_STOP_DEADMAN_TIMER_BAD_SUBSTEP_NUM_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SBE_VITAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SBE_VITAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_THREAD_CONTROL_INV_COMMAND_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_THREAD_CONTROL_INV_COMMAND_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_THREAD_CONTROL_INV_COMMAND_ADD_ERROR_INFO(RC) 

#define RC_PROC_THREAD_CONTROL_SRESET_FAIL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_THREAD_CONTROL_SRESET_FAIL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_THREAD_CONTROL_SRESET_FAIL_ADD_ERROR_INFO(RC) 

#define RC_PROC_THREAD_CONTROL_START_PRE_NOMAINT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_THREAD_CONTROL_START_PRE_NOMAINT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_THREAD_CONTROL_START_PRE_NOMAINT_ADD_ERROR_INFO(RC) 

#define RC_PROC_THREAD_CONTROL_START_FAIL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_THREAD_CONTROL_START_FAIL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_THREAD_CONTROL_START_FAIL_ADD_ERROR_INFO(RC) 

#define RC_PROC_THREAD_CONTROL_STOP_FAIL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_THREAD_CONTROL_STOP_FAIL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_THREAD_CONTROL_STOP_FAIL_ADD_ERROR_INFO(RC) 

#define RC_PROC_THREAD_CONTROL_STEP_PRE_NOMAINT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_THREAD_CONTROL_STEP_PRE_NOMAINT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_THREAD_CONTROL_STEP_PRE_NOMAINT_ADD_ERROR_INFO(RC) 

#define RC_PROC_THREAD_CONTROL_STEP_FAIL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_THREAD_CONTROL_STEP_FAIL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_THREAD_CONTROL_STEP_FAIL_ADD_ERROR_INFO(RC) 

#define RC_PROC_THREAD_CONTROL_ACTIVATE_FAIL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_THREAD_CONTROL_ACTIVATE_FAIL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_THREAD_CONTROL_ACTIVATE_FAIL_ADD_ERROR_INFO(RC) 

#define RC_SBE_SUCCESS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SUCCESS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SUCCESS_ADD_ERROR_INFO(RC) 

#define RC_SBE_SUCCESS_SLAVE_CHIP_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SUCCESS_SLAVE_CHIP_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SUCCESS_SLAVE_CHIP_ADD_ERROR_INFO(RC) 

#define RC_SBE_PAUSE_WITH_SUCCESS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PAUSE_WITH_SUCCESS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PAUSE_WITH_SUCCESS_ADD_ERROR_INFO(RC) 

#define RC_SBE_PROC_ENTRY_HALT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PROC_ENTRY_HALT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PROC_ENTRY_HALT_ADD_ERROR_INFO(RC) 

#define RC_SBE_PROC_EXIT_HALT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PROC_EXIT_HALT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PROC_EXIT_HALT_ADD_ERROR_INFO(RC) 

#define RC_SBE_PROC_CHECKSTOP_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PROC_CHECKSTOP_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PROC_CHECKSTOP_ADD_ERROR_INFO(RC) 

#define RC_SBE_PROC_RECOVERABLE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PROC_RECOVERABLE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PROC_RECOVERABLE_ADD_ERROR_INFO(RC) 

#define RC_SBE_PROC_SPATTN_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PROC_SPATTN_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PROC_SPATTN_ADD_ERROR_INFO(RC) 

#define RC_SBE_PORE_ERROR0_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PORE_ERROR0_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PORE_ERROR0_ADD_ERROR_INFO(RC) 

#define RC_SBE_PORE_ERROR1_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PORE_ERROR1_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PORE_ERROR1_ADD_ERROR_INFO(RC) 

#define RC_SBE_PORE_ERROR2_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PORE_ERROR2_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PORE_ERROR2_ADD_ERROR_INFO(RC) 

#define RC_SBE_PORE_ERROR3_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PORE_ERROR3_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PORE_ERROR3_ADD_ERROR_INFO(RC) 

#define RC_SBE_PORE_ERROR4_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PORE_ERROR4_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PORE_ERROR4_ADD_ERROR_INFO(RC) 

#define RC_SBE_SCAN0_DONE_POLL_THRESHOLD_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SCAN0_DONE_POLL_THRESHOLD_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SCAN0_DONE_POLL_THRESHOLD_ADD_ERROR_INFO(RC) 

#define RC_SBE_ARRAYINIT_POLL_THRESHOLD_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_ARRAYINIT_POLL_THRESHOLD_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_ARRAYINIT_POLL_THRESHOLD_ADD_ERROR_INFO(RC) 

#define RC_PROC_MANUAL_SBE_START_FAILED_TO_START_SBE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_MANUAL_SBE_START_FAILED_TO_START_SBE_CALL_FUNCS_TO_COLLECT_FFDC(RC) { fapi::ReturnCode l_tempRc; FAPI_EXEC_HWP(l_tempRc, proc_sbe_ffdc, CHIP_IN_ERROR, RC); }
#define RC_PROC_MANUAL_SBE_START_FAILED_TO_START_SBE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SBE_VITAL}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SBE_VITAL)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_GETPUTREG_REGTYPE_INVALID_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_GETPUTREG_REGTYPE_INVALID_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_GETPUTREG_REGTYPE_INVALID_ADD_ERROR_INFO(RC) 

#define RC_PROC_GETPUTREG_REGNUM_INVALID_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_GETPUTREG_REGNUM_INVALID_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_GETPUTREG_REGNUM_INVALID_ADD_ERROR_INFO(RC) 

#define RC_PROC_GETPUTREG_SPR_UNSUPPORTED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_GETPUTREG_SPR_UNSUPPORTED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_GETPUTREG_SPR_UNSUPPORTED_ADD_ERROR_INFO(RC) 

#define RC_SBE_PIBMEM_PRE_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PIBMEM_PRE_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PIBMEM_PRE_ERROR_ADD_ERROR_INFO(RC) 

#define RC_SBE_PIBMEM_POST_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PIBMEM_POST_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PIBMEM_POST_ERROR_ADD_ERROR_INFO(RC) 

#define RC_SBE_PIBMEM_IMAGE_SIZE_ALIGNMENT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PIBMEM_IMAGE_SIZE_ALIGNMENT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PIBMEM_IMAGE_SIZE_ALIGNMENT_ADD_ERROR_INFO(RC) 

#define RC_SBE_PIBMEM_LOAD_ADDRESS_ALIGNMENT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PIBMEM_LOAD_ADDRESS_ALIGNMENT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PIBMEM_LOAD_ADDRESS_ALIGNMENT_ADD_ERROR_INFO(RC) 

#define RC_SBE_PIBMEM_OVERFLOW_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_PIBMEM_OVERFLOW_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_PIBMEM_OVERFLOW_ADD_ERROR_INFO(RC) 

#define RC_SBE_SCAN_MAGIC_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SCAN_MAGIC_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SCAN_MAGIC_MISMATCH_ADD_ERROR_INFO(RC) 

#define RC_SBE_SCAN_HEADER_VERSION_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SCAN_HEADER_VERSION_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SCAN_HEADER_VERSION_ERROR_ADD_ERROR_INFO(RC) 

#define RC_SBE_SCAN_DATA_SIZE_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SCAN_DATA_SIZE_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SCAN_DATA_SIZE_ERROR_ADD_ERROR_INFO(RC) 

#define RC_SBE_SCAN_RING_LENGTH_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SCAN_RING_LENGTH_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SCAN_RING_LENGTH_ERROR_ADD_ERROR_INFO(RC) 

#define RC_SBE_SCAN_CHECKWORD_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_SBE_SCAN_CHECKWORD_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_SBE_SCAN_CHECKWORD_ERROR_ADD_ERROR_INFO(RC) 

#define RC_PROC_A_X_PCI_DMI_PLL_SETUP_ABUS_PLL_NO_LOCK_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_A_X_PCI_DMI_PLL_SETUP_ABUS_PLL_NO_LOCK_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_A_X_PCI_DMI_PLL_SETUP_ABUS_PLL_NO_LOCK_ADD_ERROR_INFO(RC) 

#define RC_PROC_A_X_PCI_DMI_PLL_SETUP_DMI_PLL_NO_LOCK_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_A_X_PCI_DMI_PLL_SETUP_DMI_PLL_NO_LOCK_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_A_X_PCI_DMI_PLL_SETUP_DMI_PLL_NO_LOCK_ADD_ERROR_INFO(RC) 

#define RC_PROC_A_X_PCI_DMI_PLL_SETUP_PCIE_PLL_NO_LOCK_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_A_X_PCI_DMI_PLL_SETUP_PCIE_PLL_NO_LOCK_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_A_X_PCI_DMI_PLL_SETUP_PCIE_PLL_NO_LOCK_ADD_ERROR_INFO(RC) 

#define RC_PROC_ABUS_SCOMINIT_INVALID_TARGET_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_ABUS_SCOMINIT_INVALID_TARGET_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_ABUS_SCOMINIT_INVALID_TARGET_ADD_ERROR_INFO(RC) 

#define RC_PROC_CHIPLET_SCOMINIT_INVALID_TARGET_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_CHIPLET_SCOMINIT_INVALID_TARGET_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_CHIPLET_SCOMINIT_INVALID_TARGET_ADD_ERROR_INFO(RC) 

#define RC_PROC_DMI_SCOMINIT_INVALID_TARGET_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_DMI_SCOMINIT_INVALID_TARGET_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_DMI_SCOMINIT_INVALID_TARGET_ADD_ERROR_INFO(RC) 

#define RC_PROC_XBUS_SCOMINIT_INVALID_TARGET_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_XBUS_SCOMINIT_INVALID_TARGET_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_XBUS_SCOMINIT_INVALID_TARGET_ADD_ERROR_INFO(RC) 

#define RC_PROC_BUILD_SMP_NODE_ADD_INTERNAL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_NODE_ADD_INTERNAL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_NODE_ADD_INTERNAL_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_BUILD_SMP_DUPLICATE_FABRIC_ID_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_DUPLICATE_FABRIC_ID_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_DUPLICATE_FABRIC_ID_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&NODE_ID, &CHIP_ID}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(NODE_ID)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CHIP_ID)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_BUILD_SMP_INVALID_OPERATION_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_INVALID_OPERATION_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_INVALID_OPERATION_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&OP}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(OP)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_BUILD_SMP_MASTER_DESIGNATION_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_MASTER_DESIGNATION_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_MASTER_DESIGNATION_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&OP, &MASTER_CHIP_SYS_CURR, &MASTER_CHIP_NODE_CURR, &FIRST_CHIP_IN_SYS, &FIRST_CHIP_IN_NODE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(OP)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(MASTER_CHIP_SYS_CURR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(MASTER_CHIP_NODE_CURR)}, {fapi::ReturnCode::EI_TYPE_FFDC, 3, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIRST_CHIP_IN_SYS)}, {fapi::ReturnCode::EI_TYPE_FFDC, 4, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FIRST_CHIP_IN_NODE)}}; RC.addErrorInfo(l_objects, l_entries, 5);}

#define RC_PROC_BUILD_SMP_EPSILON_RANGE_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_EPSILON_RANGE_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_EPSILON_RANGE_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&VALUE, &MAX_HW_VALUE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(VALUE)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(MAX_HW_VALUE)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_BUILD_SMP_EPSILON_INVALID_TABLE_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_EPSILON_INVALID_TABLE_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_EPSILON_INVALID_TABLE_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_BUILD_SMP_PACING_RATE_TABLE_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_PACING_RATE_TABLE_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_PACING_RATE_TABLE_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_BUILD_SMP_CORE_FLOOR_FREQ_RATIO_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_CORE_FLOOR_FREQ_RATIO_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_CORE_FLOOR_FREQ_RATIO_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&FREQ_PB, &FREQ_CORE_FLOOR}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FREQ_PB)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(FREQ_CORE_FLOOR)}}; RC.addErrorInfo(l_objects, l_entries, 2);}

#define RC_PROC_BUILD_SMP_CORE_FLOOR_RATIO_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_CORE_FLOOR_RATIO_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_CORE_FLOOR_RATIO_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&CORE_FLOOR_RATIO}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CORE_FLOOR_RATIO)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_BUILD_SMP_INVALID_GROUP_SIZE_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_INVALID_GROUP_SIZE_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_INVALID_GROUP_SIZE_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&SIZE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(SIZE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_BUILD_SMP_INVALID_AGGREGATE_CONFIG_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_INVALID_AGGREGATE_CONFIG_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_INVALID_AGGREGATE_CONFIG_ERR_ADD_ERROR_INFO(RC) 

#define RC_PROC_BUILD_SMP_HOTPLUG_SHADOW_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_HOTPLUG_SHADOW_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_HOTPLUG_SHADOW_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ADDRESS0, &ADDRESS1, &DATA0, &DATA1}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ADDRESS0)}, {fapi::ReturnCode::EI_TYPE_FFDC, 1, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ADDRESS1)}, {fapi::ReturnCode::EI_TYPE_FFDC, 2, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(DATA0)}, {fapi::ReturnCode::EI_TYPE_FFDC, 3, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(DATA1)}}; RC.addErrorInfo(l_objects, l_entries, 4);}

#define RC_PROC_BUILD_SMP_X_CMD_RATE_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_X_CMD_RATE_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_X_CMD_RATE_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&CMD_RATE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CMD_RATE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_BUILD_SMP_A_CMD_RATE_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_A_CMD_RATE_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_A_CMD_RATE_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&CMD_RATE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CMD_RATE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_BUILD_SMP_F_CMD_RATE_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_F_CMD_RATE_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_F_CMD_RATE_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&CMD_RATE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(CMD_RATE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_BUILD_SMP_ADU_STATUS_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_BUILD_SMP_ADU_STATUS_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_BUILD_SMP_ADU_STATUS_MISMATCH_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&STATUS_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(STATUS_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_PROC_UNEXPECTED_CLOCKSTOP_STATUS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROC_UNEXPECTED_CLOCKSTOP_STATUS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROC_UNEXPECTED_CLOCKSTOP_STATUS_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_O2S_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_O2S_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_O2S_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_PROCPM_VOLTAGE_BAD_READ_REQ_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_PROCPM_VOLTAGE_BAD_READ_REQ_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_PROCPM_VOLTAGE_BAD_READ_REQ_ADD_ERROR_INFO(RC) 

#define P8_PM_BAD_VDD_VOLTAGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define P8_PM_BAD_VDD_VOLTAGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define P8_PM_BAD_VDD_VOLTAGE_ADD_ERROR_INFO(RC) 

#define P8_PM_BAD_VCS_VOLTAGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define P8_PM_BAD_VCS_VOLTAGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define P8_PM_BAD_VCS_VOLTAGE_ADD_ERROR_INFO(RC) 

#define RC_CEN_GETTRACEARRAY_INTERNAL_ERR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_CEN_GETTRACEARRAY_INTERNAL_ERR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_CEN_GETTRACEARRAY_INTERNAL_ERR_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&ERR_DATA}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(ERR_DATA)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_MSS_RCD_PARITY_ERROR_PORT0_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_RCD_PARITY_ERROR_PORT0_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_RCD_PARITY_ERROR_PORT0_ADD_ERROR_INFO(RC) 

#define RC_MSS_RCD_PARITY_ERROR_PORT1_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_RCD_PARITY_ERROR_PORT1_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_RCD_PARITY_ERROR_PORT1_ADD_ERROR_INFO(RC) 

#define RC_MSS_RCD_PARITY_ERROR_LIMIT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_RCD_PARITY_ERROR_LIMIT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_RCD_PARITY_ERROR_LIMIT_ADD_ERROR_INFO(RC) 

#define RC_MSS_CCS_HUNG_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_CCS_HUNG_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_CCS_HUNG_ADD_ERROR_INFO(RC) 

#define RC_MSS_CCS_READ_MISCOMPARE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_CCS_READ_MISCOMPARE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_CCS_READ_MISCOMPARE_ADD_ERROR_INFO(RC) 

#define RC_MSS_CCS_UE_SUE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_CCS_UE_SUE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_CCS_UE_SUE_ADD_ERROR_INFO(RC) 

#define RC_MSS_CCS_CAL_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_CCS_CAL_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_CCS_CAL_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_MSS_PLACE_HOLDER_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_PLACE_HOLDER_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_PLACE_HOLDER_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_EFF_CONFIG_RANK_GROUP_RC_ERROR_001A_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_EFF_CONFIG_RANK_GROUP_RC_ERROR_001A_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_EFF_CONFIG_RANK_GROUP_RC_ERROR_001A_ADD_ERROR_INFO(RC) 

#define RC_MSS_EFF_CONFIG_RC_ERROR_001A_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_EFF_CONFIG_RC_ERROR_001A_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_EFF_CONFIG_RC_ERROR_001A_ADD_ERROR_INFO(RC) 

#define RC_MSS_UNEXPECTED_MEM_CLK_STATUS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_UNEXPECTED_MEM_CLK_STATUS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_UNEXPECTED_MEM_CLK_STATUS_ADD_ERROR_INFO(RC) 

#define RC_MSS_UNEXPECTED_NEST_CLK_STATUS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_UNEXPECTED_NEST_CLK_STATUS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_UNEXPECTED_NEST_CLK_STATUS_ADD_ERROR_INFO(RC) 

#define RC_MSS_INIT1_OPCG_DONE_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_INIT1_OPCG_DONE_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_INIT1_OPCG_DONE_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_INIT1_FSISTATUS_FAIL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_INIT1_FSISTATUS_FAIL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_INIT1_FSISTATUS_FAIL_ADD_ERROR_INFO(RC) 

#define RC_MSS_PLL_LOCK_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_PLL_LOCK_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_PLL_LOCK_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_MSS_THOLD_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_THOLD_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_THOLD_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_CCREG_MISMATCH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_CCREG_MISMATCH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_CCREG_MISMATCH_ADD_ERROR_INFO(RC) 

#define RC_MSS_ARRAY_REPAIR_BUSY_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_ARRAY_REPAIR_BUSY_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_ARRAY_REPAIR_BUSY_ADD_ERROR_INFO(RC) 

#define RC_MSS_ARRAY_REPAIR_NOT_DONE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_ARRAY_REPAIR_NOT_DONE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_ARRAY_REPAIR_NOT_DONE_ADD_ERROR_INFO(RC) 

#define RC_MSS_ECC_TRAP_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_ECC_TRAP_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_ECC_TRAP_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_DP18_0_PLL_FAILED_TO_LOCK_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_DP18_0_PLL_FAILED_TO_LOCK_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_DP18_0_PLL_FAILED_TO_LOCK_ADD_ERROR_INFO(RC) 

#define RC_MSS_DP18_1_PLL_FAILED_TO_LOCK_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_DP18_1_PLL_FAILED_TO_LOCK_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_DP18_1_PLL_FAILED_TO_LOCK_ADD_ERROR_INFO(RC) 

#define RC_MSS_AD32S_0_PLL_FAILED_TO_LOCK_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_AD32S_0_PLL_FAILED_TO_LOCK_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_AD32S_0_PLL_FAILED_TO_LOCK_ADD_ERROR_INFO(RC) 

#define RC_MSS_AD32S_1_PLL_FAILED_TO_LOCK_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_AD32S_1_PLL_FAILED_TO_LOCK_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_AD32S_1_PLL_FAILED_TO_LOCK_ADD_ERROR_INFO(RC) 

#define RC_MSS_GENERAL_PUTSCOM_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_GENERAL_PUTSCOM_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_GENERAL_PUTSCOM_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_GENERAL_GETSCOM_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_GENERAL_GETSCOM_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_GENERAL_GETSCOM_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_UNEXPECTED_CLOCK_STATUS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_UNEXPECTED_CLOCK_STATUS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_UNEXPECTED_CLOCK_STATUS_ADD_ERROR_INFO(RC) 

#define RC_MSS_UNEXPECTED_FIR_STATUS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_UNEXPECTED_FIR_STATUS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_UNEXPECTED_FIR_STATUS_ADD_ERROR_INFO(RC) 

#define RC_MSS_INIT_CAL_FAILED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_INIT_CAL_FAILED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_INIT_CAL_FAILED_ADD_ERROR_INFO(RC) 

#define RC_MSS_VOLT_UNRECOGNIZED_DRAM_DEVICE_TYPE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_VOLT_UNRECOGNIZED_DRAM_DEVICE_TYPE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_VOLT_UNRECOGNIZED_DRAM_DEVICE_TYPE_ADD_ERROR_INFO(RC) {const void * l_objects[] = {&DEVICE_TYPE}; fapi::ReturnCode::ErrorInfoEntry l_entries[] = {{fapi::ReturnCode::EI_TYPE_FFDC, 0, fapi::ReturnCodeFfdc::getErrorInfoFfdcSize(DEVICE_TYPE)}}; RC.addErrorInfo(l_objects, l_entries, 1);}

#define RC_MSS_VOLT_DDR_TYPE_MIXING_UNSUPPORTED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_VOLT_DDR_TYPE_MIXING_UNSUPPORTED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_VOLT_DDR_TYPE_MIXING_UNSUPPORTED_ADD_ERROR_INFO(RC) 

#define RC_MSS_VOLT_DDR_TYPE_REQUIRED_VOLTAGE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_VOLT_DDR_TYPE_REQUIRED_VOLTAGE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_VOLT_DDR_TYPE_REQUIRED_VOLTAGE_ADD_ERROR_INFO(RC) 

#define RC_MSS_GENERAL_SIMSTKFAC_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_GENERAL_SIMSTKFAC_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_GENERAL_SIMSTKFAC_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_GET_FAPI_ATTRIBUTE_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_GET_FAPI_ATTRIBUTE_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_GET_FAPI_ATTRIBUTE_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_GET_SIM_HIERARCHY_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_GET_SIM_HIERARCHY_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_GET_SIM_HIERARCHY_ERROR_ADD_ERROR_INFO(RC) 

#define RC_MSS_UNSUPPORTED_FREQ_CALCULATED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_UNSUPPORTED_FREQ_CALCULATED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_UNSUPPORTED_FREQ_CALCULATED_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_START_NOT_RESET_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_START_NOT_RESET_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_START_NOT_RESET_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_STOP_NOT_RESET_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_STOP_NOT_RESET_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_STOP_NOT_RESET_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_CMD_IN_PROGRESS_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_CMD_IN_PROGRESS_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_CMD_IN_PROGRESS_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_NO_MEM_CNFG_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_NO_MEM_CNFG_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_NO_MEM_CNFG_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_CCS_MUX_NOT_MAINLINE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_CCS_MUX_NOT_MAINLINE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_CCS_MUX_NOT_MAINLINE_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_ECC_DISABLED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_ECC_DISABLED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_ECC_DISABLED_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_INVALID_CMD_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_INVALID_CMD_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_INVALID_CMD_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_INVALID_ADDR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_INVALID_ADDR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_INVALID_ADDR_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_CMD_TIMEOUT_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_CMD_TIMEOUT_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_CMD_TIMEOUT_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_INVALID_DRAM_SIZE_WIDTH_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_INVALID_DRAM_SIZE_WIDTH_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_INVALID_DRAM_SIZE_WIDTH_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_INVALID_DIMM_CNFG_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_INVALID_DIMM_CNFG_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_INVALID_DIMM_CNFG_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_NO_X4_SYMBOL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_NO_X4_SYMBOL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_NO_X4_SYMBOL_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_INVALID_MARKSTORE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_INVALID_MARKSTORE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_INVALID_MARKSTORE_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_INVALID_SYMBOL_INDEX_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_INVALID_SYMBOL_INDEX_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_INVALID_SYMBOL_INDEX_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_INVALID_CHIP_INDEX_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_INVALID_CHIP_INDEX_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_INVALID_CHIP_INDEX_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_MARKSTORE_WRITE_BLOCKED_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_MARKSTORE_WRITE_BLOCKED_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_MARKSTORE_WRITE_BLOCKED_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_INVALID_SYMBOL_TO_STEER_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_INVALID_SYMBOL_TO_STEER_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_INVALID_SYMBOL_TO_STEER_ADD_ERROR_INFO(RC) 

#define RC_MSS_MAINT_NO_X8_ECC_SPARE_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MAINT_NO_X8_ECC_SPARE_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MAINT_NO_X8_ECC_SPARE_ADD_ERROR_INFO(RC) 

#define RC_MSS_UNSUPPORTED_SPD_DATA_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_UNSUPPORTED_SPD_DATA_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_UNSUPPORTED_SPD_DATA_ADD_ERROR_INFO(RC) 

#define RC_MSS_NO_COMMON_SUPPORTED_CL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_NO_COMMON_SUPPORTED_CL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_NO_COMMON_SUPPORTED_CL_ADD_ERROR_INFO(RC) 

#define RC_MSS_EXCEED_TAA_MAX_NO_CL_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_EXCEED_TAA_MAX_NO_CL_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_EXCEED_TAA_MAX_NO_CL_ADD_ERROR_INFO(RC) 

#define RC_MSS_MODULE_TYPE_MIX_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_MODULE_TYPE_MIX_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_MODULE_TYPE_MIX_ADD_ERROR_INFO(RC) 

#define RC_MSS_NUM_MBA_ERROR_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_MSS_NUM_MBA_ERROR_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_MSS_NUM_MBA_ERROR_ADD_ERROR_INFO(RC) 

#define RC_CEN_DMI_SCOMINIT_INVALID_TARGET_CALL_FUNC_TO_ANALYZE_ERROR(RC) 
#define RC_CEN_DMI_SCOMINIT_INVALID_TARGET_CALL_FUNCS_TO_COLLECT_FFDC(RC) 
#define RC_CEN_DMI_SCOMINIT_INVALID_TARGET_ADD_ERROR_INFO(RC) 



#endif
